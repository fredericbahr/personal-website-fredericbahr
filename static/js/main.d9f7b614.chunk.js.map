{"version":3,"sources":["components/Contact/Contact.tsx","components/Logo/Logo.tsx","styles/globalStyles.ts","utils/constants.ts","components/LanguageSwitcher/LanguageMenu.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","data/navLinks.ts","components/Navbar/MenuNavbar.tsx","components/Navbar/SideBySideNavbar.tsx","components/Navbar/Navbar.tsx","components/App/Header.tsx","components/util-components/SectionHeadline.tsx","components/About/About.tsx","assets/img/chatbot-avatar.svg","components/Chatbot/Chat/ChatHeader.tsx","components/Chatbot/Chat/ChatText.tsx","utils/hooks/useElementDimension.ts","assets/img/pdf-file.svg","components/Chatbot/Chat/ChatDownload.tsx","components/Chatbot/Chat/ChatAction.tsx","assets/pdf/lebenslauf.pdf","data/chatMessages.ts","components/Chatbot/Chat/ChatFormMessage.tsx","components/Chatbot/Chat/ChatMessages.tsx","utils/typePredicates.ts","components/Chatbot/Chat/Chat.tsx","components/Chatbot/FAB.tsx","components/Chatbot/Chatbot.tsx","data/experiences.ts","components/Experience/components/Description.tsx","components/Experience/components/Technologies.tsx","components/Experience/components/TimeRange.tsx","components/util-components/StyledLink.tsx","components/Experience/components/WorkingTitle.tsx","components/Experience/TabPanel.tsx","components/Experience/Experience.tsx","components/Footer/Footer.tsx","components/Character/units.ts","components/Character/miniMe.ts","components/Character/characterUtils.ts","components/Character/Character.tsx","components/util-components/CTAButton.tsx","components/Introduction/Introduction.tsx","components/Projects/Projects.tsx","components/App/Portfolio.tsx","components/App/App.tsx","components/Logo/AnimatedLogo.tsx","reportWebVitals.ts","styles/muiTheme.ts","i18n/i18n.ts","index.tsx","styles/styledComponentsTheme.ts"],"names":["Wrapper","styled","div","Contact","Logo","className","id","xmlns","xmlnsXlink","viewBox","shapeRendering","textRendering","d","fill","stroke","strokeWidth","transform","breakpoints","GlobalStyle","createGlobalStyle","props","theme","colors","whitefontcolor","transition","navbarItemBaseDelay","typewriterDeleteDelay","LanguageMenu","open","anchorElement","onClose","handleClose","useTranslation","t","i18n","handleClick","language","changeLanguage","anchorEl","MenuItem","onClick","StyledTranslate","Translate","LanguageSwitcher","useState","setAnchorElement","Boolean","Tooltip","title","IconButton","event","currentTarget","navLinks","url","StyledNav","nav","mainwhite","StyledOl","ol","StyledLi","li","StyledMenuIcon","MenuIcon","StyledCloseIcon","CloseIcon","StyledSwipeableDrawer","SwipeableDrawer","DrawerWrapper","lighten","mainblack","Puller","StyledListItemButton","ListItemButton","mainred","StyledNavHashLink","NavHashLink","MenuNavbar","isMounted","React","setOpen","toggleDrawer","newOpen","MenuIconButton","Slide","in","timeout","anchor","onOpen","swipeAreaWidth","disableSwipeToOpen","List","map","link","idx","ListItem","smooth","to","SideBySideNavbar","length","Navbar","setIsMounted","mediaQuery","useMediaQuery","useEffect","setTimeout","clearTimeout","StyledAppBar","AppBar","StyledIconButton","darken","StyledLogo","Header","homeClickHandler","trigger","useScrollTrigger","target","window","threshold","staticPosition","direction","color","position","Toolbar","StyledHeadline","h2","SectionHeadline","children","StyledSection","section","About","StyledCardHeader","CardHeader","StyledClose","Close","StyledTypography","Typography","ChatHeader","clickHandler","avatar","Avatar","alt","src","ChatbotAvatar","variant","sx","fontSize","display","subheader","action","StyledMessageWrapper","owner","StyledMessage","p","ChatText","Fade","appear","getElementDimension","element","width","offsetWidth","height","offsetHeight","StyledCard","Card","StyledCardContent","CardContent","StyledPage","Page","StyledCardActions","CardActions","StyledImg","img","ChatDownload","type","fileName","ref","useRef","size","elementDimensions","setElementDimensions","handleResize","addEventListener","removeEventListener","useElementDimensions","current","handleDownload","document","createElement","body","appendChild","download","toString","href","click","removeChild","CardActionArea","file","renderMode","pageNumber","loading","CircularProgress","pdfFileIcon","StyledButton","Button","ChatAction","handleAction","initialMessages","message","sayHello","actionText","messges","furtherActions","showCV","Lebenslauf","directChatFormElements","name","label","required","sendAnotherMessage","formElements","formSubmitID","directChat","actionRepository","Map","set","initialActions","StyledDialog","Dialog","StyledTitleWrapper","StyledDialogTitle","DialogTitle","StyledDialogContent","DialogContent","StyledDialogContentText","DialogContentText","StyledForm","form","StyledTextField","TextField","alpha","StyledDialogActions","DialogActions","Transition","forwardRef","renderFormElements","formElement","autoFocus","multiline","minRows","ChatFormMessage","isDialogOpen","setIsDialogOpen","TransitionComponent","gutterBottom","component","method","value","style","StyledDiv","ChatMessages","messages","setTextMessages","actions","setActions","messagesEndRef","scrollToBottom","getFurtherActionMessages","furtherActionsArray","forEach","chatAction","get","push","handleChatAction","actionMessage","a","delayedMessages","Promise","resolve","textMessages","all","scrollIntoView","behavior","undefined","isChatTextMessage","isChatDownload","isChatForm","Chat","StyledFab","Fab","FAB","Grow","ChatBubbleOutline","Chatbot","isOpen","setIsOpen","experiences","index","shortCompanyName","fullCompanyName","companyUrl","jobTitle","timeRange","from","description","technologies","StyledList","ul","StyledListItem","Description","arr","Array","isArray","descriptions","listItems","renderUnorderedList","StyledStack","Stack","Item","Paper","Technologies","spacing","technology","TimeRange","date","moment","format","isValid","Link","StyledLink","h3","Title","At","WorkingTitle","companyName","StyledWrapper","TabWrapper","StyledTab","Tab","StyledTabPanel","role","hidden","Box","Experience","setValue","experience","Tabs","orientation","onChange","newValue","Footer","headSize","headPositionY","mainHairSizeX","mainHairSizeY","mainHairSizeZ","bodySizeZ","legSizeX","bodySizeX","legSizeZ","legPositionY","anklePositonY","MiniMe","character","skinMat","eyeMat","retinaMat","eyeBrownMat","oralCavityMat","tongueMat","teethMat","glassMat","earMat","shirtMat","beltMat","buckleMat","legMat","legSeperatorMat","footMat","hairMat","buttonMat","deg2rad","degrees","Math","PI","createHead","headGeometry","THREE","head","createEyesAndEyebrowns","eyes","eyeBrowns","mouth","createMouth","createGlassesAndEars","glasses","ears","add","eyeGeometry","createEyes","createEyeBrowns","leftEye","geometry","parameters","depth","rightEye","createRetinas","leftRetina","rightRetina","retinaGeometry","eyeBrownGeometry","leftEyeBrown","rotateZ","rightEyeBrown","oralCavityGeometry","teethGeometry","tongueGeometry","oralCavity","material","side","teeth","tongue","glassGeometry","createGlasses","createEars","middleConnectorGeometry","outerConnectorGeometry","sideConnectorGeometry","leftGlass","rightGlass","middleConnector","outerRadius","leftOuterConnector","x","innerRadius","rightOuterConnector","leftSideConnector","rotateY","rightSideConnector","earGeometry","leftEar","rightEar","createHairs","mainHair","detailHairs","hair","basicHairs","baiscHairGeometry","createTopHair","createBackHair","createSideHair","createDetailHairs","group","geometries","obj","isMesh","clone","updateMatrix","applyMatrix4","matrix","mergeBufferGeometries","mergeMeshes","maxTopHair","i","hairPositionX","maxBackHair","backHairGeometry","hairPositionY","rotateX","maxSideHair","isLeftSide","sideMultiplier","hairPositionZ","hairGeometry","createFrontHairParting","createFrontHairRightSideDetails","createBackHairDetails","half","floor","sameStartSameEndIdx","factor","getFactorForBackHairDetails","createBody","corpusGeometry","corpus","createArms","leftArm","rightArm","buttons","createButtons","button","createButton","buttonGeometry","buttonPositionY","buttonPositionYOffset","upperArmGeometry","lowerArmGeometry","thumbGeometry","fingerGeometry","createArm","isLeftArm","arm","hand","sideModificator","createArmMeshes","upperArm","lowerArm","thumb","fingers","y","createBelt","beltGeometry","buckleGeometry","belt","buckle","z","createLegs","legs","legGeometry","legSeperatorGeometry","legSizeY","leftLeg","rightLeg","legSeperator","createFeet","feet","ankleGeometry","footGeometry","leftAnkle","rightAnkle","leftFoot","rightFoot","translateY","scale","draw","console","log","animate","this","colorIndex","Character","shouldAnimate","scene","camera","innerWidth","innerHeight","lookAt","axesHelper","renderer","antialias","setPixelRatio","devicePixelRatio","controls","OrbitControls","domElement","update","replaceChildren","hemiLight","ambientLight","createLight","requestAnimationFrame","canvas","clientWidth","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","render","StyledEmailIcon","Email","Grid","TextWrapper","StyledBeforeTypwriter","StyledSubtitle","StyledText","StyledCTAButton","startIcon","Introduction","navigate","useNavigate","onInit","typewriter","pauseFor","introductionDelay","typeString","deleteAll","start","replace","Projects","Portfolio","StyledLogoWrapper","StyledAnimatedLogo","StyledContentWrapper","App","isInAnimation","setIsInAnimation","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","muiTheme","createTheme","typography","fontFamily","join","palette","primary","main","resources","en","translation","de","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ReactDOM","StrictMode","StyledEngineProvider","injectFirst","getElementById"],"mappings":"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","file":"static/js/main.d9f7b614.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  /** 50px navbar and 2*5px padding */\r\n  min-height: calc(100vh - 50px - 14px);\r\n`;\r\n\r\nexport default function Contact() {\r\n  return <Wrapper>hi</Wrapper>;\r\n}\r\n","import React from \"react\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst Logo = ({ className }: IProps) => {\n  return (\n    <svg\n      className={className}\n      id=\"e76RbDrnTZM1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 226.304018 200.378\"\n      shapeRendering=\"geometricPrecision\"\n      textRendering=\"geometricPrecision\"\n    >\n      <path\n        id=\"e76RbDrnTZM2\"\n        d=\"M75.000003,20.999997L75.000003,43.003079L152.325119,43.003079L152.325119,20.999997L75.000003,20.999997Z\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-elem-1\"\n      ></path>\n      <path\n        id=\"e76RbDrnTZM3\"\n        d=\"M75.000003,72.550075L75.000003,156.999998L97.841297,156.999997L97.841297,94.972261L152.325119,94.97226L152.325119,72.550072L75.000003,72.550075Z\"\n        transform=\"matrix(1 0 0 1 0 0.000003)\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-elem-2\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const breakpoints = {\r\n  xl: \"1536px\",\r\n  lg: \"1200px\",\r\n  md: \"900px\",\r\n  sm: \"600px\",\r\n  xs: \"0px\",\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  font-size: 20px;\r\n\r\n  @media screen and (min-width: ${breakpoints.lg}) and (max-width: ${breakpoints.xl}) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: ${breakpoints.lg}){\r\n    font-size: 14px;\r\n  }\r\n\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: \"Fira Code\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  overflow-x: hidden;\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n  counter-reset: section 0;\r\n}\r\n\r\ncode {\r\n  font-family: \"Courier New\",\r\n    monospace;\r\n}\r\n\r\n\r\ncanvas { width: 100%; height: 100%; display: block;}\r\n\r\n  /* ===== Scrollbar CSS ===== */\r\n/* Firefox */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #cc0e00 #181114;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n/* Chrome, Edge, and Safari */\r\n*::-webkit-scrollbar {\r\n  width: 9px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n  background: #181114;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: #cc0e00;\r\n  border-radius: 0px;\r\n  border: 0px none #cc0e00;\r\n}\r\n`;\r\n","/**\n * Timeout for the MUI Transition components\n */\nexport const timeout = 400;\n\n/**\n * CSS Transition\n */\nexport const transition = \"all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1)\";\n\n/**\n * The delay for the navbar to render\n */\nexport const navbarDelay = 500;\n\n/**\n * The base delay for a navbar item to render\n */\nexport const navbarItemBaseDelay = 200;\n\n/**\n * The delay for every consecutive nabar item to render\n */\nexport const navbarItemExtraDelay = 300;\n\n/**\n * The daly for the introduction to render\n */\nexport const introductionDelay = 1000;\n\n/**\n * The delay for the typewriter to initially start\n */\nexport const typewriterInitialDelay = introductionDelay + 500;\n\n/**\n * The delay for the typewriter before deleting chars\n */\nexport const typewriterDeleteDelay = 2500;\n","import { Menu, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  anchorElement: null | HTMLElement;\r\n  onClose: () => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const LanguageMenu = ({ open, anchorElement, onClose, handleClose }: IProps) => {\r\n  const { t, i18n } = useTranslation();\r\n  const handleClick = (language: string) => {\r\n    i18n.changeLanguage(language);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Menu open={open} anchorEl={anchorElement} onClose={onClose}>\r\n      <MenuItem onClick={() => handleClick(\"en\")}>{t(\"languageMenu.english\")}</MenuItem>\r\n      <MenuItem onClick={() => handleClick(\"de\")}>{t(\"languageMenu.german\")}</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n","import { Translate } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { LanguageMenu } from \"./LanguageMenu\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst StyledTranslate = styled(Translate)`\r\n  color: white;\r\n`;\r\n\r\nexport const LanguageSwitcher = () => {\r\n  const { t } = useTranslation();\r\n  const [anchorElement, setAnchorElement] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorElement);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title={t(\"languageMenu.tooltip\") as string}>\r\n        <IconButton onClick={handleClick}>\r\n          <StyledTranslate />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <LanguageMenu anchorElement={anchorElement} onClose={handleClose} open={open} handleClose={handleClose} />\r\n    </>\r\n  );\r\n};\r\n","import { INavLink } from \"../components/Navbar/interface\";\n\nexport const navLinks: INavLink[] = [\n  {\n    title: \"navbar.about\",\n    url: \"/#about\",\n  },\n  {\n    title: \"navbar.experience\",\n    url: \"/#experience\",\n  },\n  {\n    title: \"navbar.projects\",\n    url: \"/#projects\",\n  },\n];\n","import { IconButton, lighten, List, ListItem, ListItemButton, Slide, SwipeableDrawer } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { navbarItemBaseDelay, navbarItemExtraDelay, transition } from \"../../utils/constants\";\r\nimport { LanguageSwitcher } from \"../LanguageSwitcher/LanguageSwitcher\";\r\nimport { NavHashLink } from \"react-router-hash-link\";\r\nimport { navLinks } from \"../../data/navLinks\";\r\nimport { INavLink } from \"./interface\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  isMounted: boolean;\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  font-family: \"Fira Code\", monospace;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledOl = styled.ol`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n  counter-reset: item 0;\r\n  margin-right: 1vmax;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  counter-increment: item 1;\r\n  margin: 0 10px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledMenuIcon = styled(MenuIcon)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledCloseIcon = styled(CloseIcon)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)`\r\n  & .MuiPaper-root {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nconst DrawerWrapper = styled.div`\r\n  display: grid;\r\n  flex-direction: column;\r\n  place-content: center;\r\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.3)};\r\n  border-radius: 8px 8px 0 0;\r\n`;\r\n\r\nconst Puller = styled.div`\r\n  display: flex;\r\n  width: 2rem;\r\n  height: 6px;\r\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.05)};\r\n  border-radius: 3px;\r\n  margin-top: 0.75rem;\r\n  justify-self: center;\r\n`;\r\n\r\nconst StyledListItemButton = styled(ListItemButton)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n  transition: ${transition};\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nconst StyledNavHashLink = styled(NavHashLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: ${transition};\r\n  font-size: 1.3rem;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nexport const MenuNavbar = ({ isMounted }: IProps) => {\r\n  const drawerBleeding = 56;\r\n  const { t } = useTranslation();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = (newOpen: boolean) => () => {\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  const MenuIconButton = open ? (\r\n    <IconButton onClick={toggleDrawer(false)}>\r\n      <StyledCloseIcon />\r\n    </IconButton>\r\n  ) : (\r\n    <IconButton onClick={toggleDrawer(true)}>\r\n      <StyledMenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StyledNav>\r\n        <StyledOl>\r\n          <Slide in={isMounted} timeout={navbarItemBaseDelay}>\r\n            <StyledLi>\r\n              <LanguageSwitcher />\r\n            </StyledLi>\r\n          </Slide>\r\n          <Slide in={isMounted} timeout={navbarItemBaseDelay + navbarItemExtraDelay}>\r\n            <StyledLi>{MenuIconButton}</StyledLi>\r\n          </Slide>\r\n        </StyledOl>\r\n      </StyledNav>\r\n      <StyledSwipeableDrawer\r\n        anchor=\"bottom\"\r\n        open={open}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n        swipeAreaWidth={drawerBleeding}\r\n        disableSwipeToOpen={false}\r\n      >\r\n        <DrawerWrapper>\r\n          <Puller />\r\n          <List>\r\n            {navLinks.map((link: INavLink, idx: number) => {\r\n              return (\r\n                <ListItem>\r\n                  <StyledListItemButton >\r\n                    <StyledNavHashLink smooth to={link.url} onClick={toggleDrawer(false)}>\r\n                      {t(link.title as any)}\r\n                    </StyledNavHashLink>\r\n                  </StyledListItemButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </DrawerWrapper>\r\n      </StyledSwipeableDrawer>\r\n    </>\r\n  );\r\n};\r\n","import { Slide } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { NavHashLink } from \"react-router-hash-link\";\r\nimport styled from \"styled-components\";\r\nimport { navLinks } from \"../../data/navLinks\";\r\nimport { transition, navbarItemBaseDelay, navbarItemExtraDelay } from \"../../utils/constants\";\r\nimport { LanguageSwitcher } from \"../LanguageSwitcher/LanguageSwitcher\";\r\nimport { INavLink } from \"./interface\";\r\n\r\ninterface IProps {\r\n  isMounted: boolean;\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  font-family: \"Fira Code\", monospace;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledOl = styled.ol`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n  counter-reset: item 0;\r\n  margin-right: 1vmax;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  counter-increment: item 1;\r\n  margin: 0 10px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledNavHashLink = styled(NavHashLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: ${transition};\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n\r\n  &::before {\r\n    content: \"0\" counter(item) \".\";\r\n    color: ${(props) => props.theme.colors.mainred};\r\n    padding: 7px;\r\n  }\r\n`;\r\n\r\nexport const SideBySideNavbar = ({ isMounted }: IProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <StyledNav>\r\n      <StyledOl>\r\n        {isMounted &&\r\n          navLinks.map((link: INavLink, idx: number) => {\r\n            return (\r\n              <Slide key={idx} in={isMounted} timeout={navbarItemBaseDelay + idx * navbarItemExtraDelay}>\r\n                <StyledLi key={idx}>\r\n                  <StyledNavHashLink smooth to={link.url}>\r\n                    {t(link.title as any)}\r\n                  </StyledNavHashLink>\r\n                </StyledLi>\r\n              </Slide>\r\n            );\r\n          })}\r\n        <Slide in={isMounted} timeout={navbarItemBaseDelay + navLinks.length * navbarItemExtraDelay}>\r\n          <StyledLi>\r\n            <LanguageSwitcher />\r\n          </StyledLi>\r\n        </Slide>\r\n      </StyledOl>\r\n    </StyledNav>\r\n  );\r\n};\r\n","import { useMediaQuery } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\nimport { navbarDelay } from \"../../utils/constants\";\r\nimport { MenuNavbar } from \"./MenuNavbar\";\r\nimport { SideBySideNavbar } from \"./SideBySideNavbar\";\r\n\r\nexport const Navbar = () => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const mediaQuery = useMediaQuery(`(max-width: ${breakpoints.sm})`);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsMounted(true), navbarDelay);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return mediaQuery ? <MenuNavbar isMounted={isMounted} /> : <SideBySideNavbar isMounted={isMounted} />;\r\n};\r\n","import { AppBar, IconButton, Slide, Toolbar, useScrollTrigger, darken, useMediaQuery } from \"@mui/material\";\nimport React from \"react\";\nimport Logo from \"../Logo/Logo\";\nimport styled from \"styled-components\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport { timeout } from \"../../utils/constants\";\nimport { breakpoints } from \"../../styles/globalStyles\";\n\ninterface IProps {\n  homeClickHandler: () => void;\n}\n\nconst StyledAppBar = styled(AppBar)`\n  flex-direction: row;\n  background-color: ${(props) => props.theme.colors.mainblack};\n  padding: 5px 0;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  margin-left: 1vmax;\n  width: 50px;\n  height: 50px;\n\n  &:hover {\n    background-color: ${(props) => darken(props.theme.colors.mainred, 0.7)};\n  }\n`;\n\nconst StyledLogo = styled(Logo)`\n  width: 50px;\n  height: 50px;\n\n  &:hover path {\n    stroke: ${(props) => darken(props.theme.colors.mainred, 0.1)};\n    fill: ${(props) => darken(props.theme.colors.mainred, 0.1)};\n  }\n`;\n\nexport const Header = ({ homeClickHandler }: IProps) => {\n  const trigger = useScrollTrigger({\n    target: window,\n    threshold: 50,\n  });\n  const staticPosition = useMediaQuery(`(max-width: ${breakpoints.md})`)\n\n  return (\n    <>\n      <Slide direction=\"down\" in={!trigger} timeout={timeout}>\n        <StyledAppBar color=\"inherit\" position={staticPosition ? \"absolute\": \"fixed\"}>\n          <Slide direction=\"down\" in={!trigger} timeout={timeout}>\n            <StyledIconButton onClick={homeClickHandler}>\n              <StyledLogo />\n            </StyledIconButton>\n          </Slide>\n          <Navbar />\n        </StyledAppBar>\n      </Slide>\n      <Toolbar />\n    </>\n  );\n};\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst StyledHeadline = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 5vh;\r\n  width: 100%;\r\n\r\n  &:before {\r\n    counter-increment: section;\r\n    content: \"0\" counter(section) \".\";\r\n    color: ${(props) => props.theme.colors.mainred};\r\n    font-size: 1.3rem;\r\n    margin-right: 15px;\r\n    font-family: \"Fira Code\";\r\n  }\r\n`;\r\n\r\nexport const SectionHeadline = ({ children }: IProps) => {\r\n  return <StyledHeadline>{children}</StyledHeadline>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function About() {\r\n  const {t} = useTranslation();\r\n  return (\r\n    <StyledSection id=\"about\">\r\n      <SectionHeadline>{t(\"sections.about\")}</SectionHeadline>\r\n    </StyledSection>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/chatbot-avatar.f2646d1a.svg\";","import { Close } from \"@mui/icons-material\";\nimport { Avatar, CardHeader, IconButton, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ChatbotAvatar from \"../../../assets/img/chatbot-avatar.svg\";\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst StyledCardHeader = styled(CardHeader)`\n  background-color: ${(props) => props.theme.colors.mainblack};\n  color: ${(props) => props.theme.colors.mainwhite};\n\n  .MuiCardHeader-action {\n    align-self: center;\n  }\n`;\n\nconst StyledClose = styled(Close)`\n  color: ${(props) => props.theme.colors.mainwhite};\n`;\n\nconst StyledTypography = styled(Typography)`\n  color: ${(props) => props.theme.colors.mainwhite};\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  &:hover {\n    background-color: #363636;\n  }\n`;\n\nconst ChatHeader = ({ clickHandler }: IProps) => {\n  return (\n    <StyledCardHeader\n      avatar={<Avatar alt=\"Chatbo\" src={ChatbotAvatar} variant=\"square\" />}\n      title={\n        <StyledTypography sx={{ fontSize: 24 }} variant=\"caption\" display=\"block\">\n          Chatbot\n        </StyledTypography>\n      }\n      subheader={\n        <StyledTypography variant=\"caption\" display=\"block\">\n          Ask me a question!\n        </StyledTypography>\n      }\n      action={\n        <StyledIconButton onClick={clickHandler}>\n          <StyledClose />\n        </StyledIconButton>\n      }\n    />\n  );\n};\n\nexport default ChatHeader;\n","import { Fade } from \"@mui/material\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: ReactNode;\r\n  owner: \"bot\" | \"customer\";\r\n}\r\n\r\nconst StyledMessageWrapper = styled.div<IProps>`\r\n  display: flex;\r\n  justify-content: ${(props) => (props.owner === \"bot\" ? \"start\" : \"end\")};\r\n`;\r\n\r\nconst StyledMessage = styled.p<IProps>`\r\n  box-sizing: border-box;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem 0;\r\n  font-size: 0.8rem;\r\n  background: ${(props) => (props.owner === \"bot\" ? \"rgba(70, 77, 66, 0.15)\" : \"black\")};\r\n  color: ${(props) => (props.owner === \"bot\" ? \"black\" : \"white\")};\r\n  border-radius: ${(props) =>\r\n    props.owner === \"bot\" ? \"1.125rem 1.125rem 1.125rem 0\" : \"1.125rem 1.125rem 0 1.125rem\"};\r\n  min-height: 2.25rem;\r\n  width: fit-content;\r\n  max-width: 80%;\r\n  box-shadow: 0 0 2rem rgba(black, 0.075), 0rem 1rem 1rem -1rem rgba(black, 0.1);\r\n  word-wrap: break-word;\r\n  hyphens: auto;\r\n`;\r\n\r\nconst ChatText = ({ children, owner }: IProps) => {\r\n  return (\r\n    <Fade in appear>\r\n      <StyledMessageWrapper owner={owner}>\r\n        <StyledMessage owner={owner}>{children}</StyledMessage>\r\n      </StyledMessageWrapper>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default ChatText;\r\n","import { useState, useEffect } from \"react\";\n\nfunction getElementDimension(element: HTMLElement | null) {\n  if (element) {\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    return {\n      width,\n      height,\n    };\n  }\n\n  return {\n    width: 0,\n    height: 0,\n  };\n}\n\nexport default function useElementDimensions(element: HTMLElement | null) {\n  const [elementDimensions, setElementDimensions] = useState(getElementDimension(element));\n\n  useEffect(() => {\n    setElementDimensions(getElementDimension(element));\n\n    function handleResize() {\n      setElementDimensions(getElementDimension(element));\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [element]);\n\n  return elementDimensions;\n}\n","export default __webpack_public_path__ + \"static/media/pdf-file.e6c7f385.svg\";","import React, { useRef } from \"react\";\r\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\r\nimport styled from \"styled-components\";\r\nimport useElementDimensions from \"../../../utils/hooks/useElementDimension\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport pdfFileIcon from \"../../../assets/img/pdf-file.svg\";\r\nimport ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\r\nimport { IChatDownload } from \"../interface\";\r\n\r\nconst StyledCard = styled(Card)`\r\n  margin: 0.5rem 0;\r\n  max-width: 80%;\r\n  background-color: rgba(70, 77, 66, 0.15);\r\n  border-radius: 1.125rem 1.125rem 1.125rem 0;\r\n`;\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n  padding: 0.8rem 0.8rem 0 0.8rem;\r\n`;\r\n\r\nconst StyledPage = styled(Page)`\r\n  & > div {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst StyledCardActions = styled(CardActions)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nexport const ChatDownload = ({ type, url, fileName }: IChatDownload) => {\r\n  const ref = useRef(null);\r\n  const size = useElementDimensions(ref.current);\r\n\r\n  /**\r\n   * Creates an anchor element and sets the download and href\r\n   * Immediatly clicks it and then removes the element again\r\n   */\r\n  const handleDownload = () => {\r\n    const link: HTMLAnchorElement = document.createElement(\"a\");\r\n    document.body.appendChild(link);\r\n    link.download = fileName.toString();\r\n    link.href = url.toString();\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const renderPDFDownlaod = () => {\r\n    return (\r\n      <StyledCard ref={ref}>\r\n        <CardActionArea onClick={() => handleDownload()}>\r\n          <StyledCardContent>\r\n            <Document file={url} renderMode=\"svg\">\r\n              <StyledPage pageNumber={1} height={size.width} loading={<CircularProgress />} />\r\n            </Document>\r\n          </StyledCardContent>\r\n        </CardActionArea>\r\n        <StyledCardActions>\r\n          <StyledImg src={pdfFileIcon} />\r\n          <StyledTypography>{fileName}.pdf</StyledTypography>\r\n          <IconButton onClick={() => handleDownload()}>\r\n            <ArrowCircleDownIcon />\r\n          </IconButton>\r\n        </StyledCardActions>\r\n      </StyledCard>\r\n    );\r\n  };\r\n\r\n  return <>{type === \"pdf\" ? renderPDFDownlaod() : \"\"}</>;\r\n};\r\n","import { Button } from \"@mui/material\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: ReactNode;\r\n  handleAction: () => void;\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 5px 0 5px 10px;\r\n  font-size: 0.8rem;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.mainblack};\r\n    color: ${(props) => props.theme.colors.mainwhite};\r\n  }\r\n`;\r\n\r\nconst ChatAction = ({ children, handleAction }: IProps) => {\r\n  return (\r\n    <StyledButton color=\"inherit\" variant=\"outlined\" onClick={handleAction}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default ChatAction;\r\n","export default __webpack_public_path__ + \"static/media/lebenslauf.c1e35f68.pdf\";","import { IChatTextMessage, IChatAction, IChatFormElement } from \"../components/Chatbot/interface\";\r\nimport Lebenslauf from \"../assets/pdf/lebenslauf.pdf\";\r\n\r\nexport const initialMessages: IChatTextMessage[] = [\r\n  { message: \"chatbot.initialMessage.firstMessage\", owner: \"bot\" },\r\n  { message: \"chatbot.initialMessage.secondMessage\", owner: \"bot\" },\r\n];\r\n\r\nconst sayHello: IChatAction = {\r\n  actionText: \"chatbot.sayHello.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.sayHello.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.sayHello.secondMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.thirdMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.fourthMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.fifthMessage\", owner: \"bot\" },\r\n  ],\r\n  furtherActions: [\"showCV\", \"directChat\"],\r\n};\r\n\r\nconst showCV: IChatAction = {\r\n  actionText: \"chatbot.showCV.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.showCV.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.showCV.secondMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.showCV.thirdMessage\", owner: \"bot\" },\r\n    { type: \"pdf\", owner: \"bot\", url: Lebenslauf, fileName: \"cv_fredericbahr\" },\r\n  ],\r\n  furtherActions: [\"sayHello\", \"directChat\"],\r\n};\r\n\r\nconst directChatFormElements: IChatFormElement[] = [\r\n  {\r\n    name: \"name\",\r\n    label: \"chatbot.formElementsLabel.name\",\r\n    required: true,\r\n    type: \"text\",\r\n  },\r\n  {\r\n    name: \"subject\",\r\n    label: \"chatbot.formElementsLabel.subject\",\r\n    required: true,\r\n    type: \"text\",\r\n  },\r\n  {\r\n    name: \"email\",\r\n    label: \"chatbot.formElementsLabel.email\",\r\n    required: true,\r\n    type: \"email\",\r\n  },\r\n  {\r\n    name: \"message\",\r\n    label: \"chatbot.formElementsLabel.message\",\r\n    required: true,\r\n    type: \"textarea\",\r\n  },\r\n];\r\n\r\nconst sendAnotherMessage: IChatAction = {\r\n  actionText: \"chatbot.sendAnotherMessage.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.sendAnotherMessage.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.sendAnotherMessage.secondMessage\", owner: \"bot\" },\r\n    {\r\n      formElements: directChatFormElements,\r\n      formSubmitID: \"46ac44df0ea8d59a83d300a64c763539\",\r\n    },\r\n  ],\r\n  furtherActions: [\"sendAnotherMessage\", \"sayHello\", \"showCV\"],\r\n};\r\n\r\nconst directChat: IChatAction = {\r\n  actionText: \"chatbot.directChat.actionText\",\r\n  messges: [\r\n    {\r\n      message: \"chatbot.directChat.firstMessage\",\r\n      owner: \"customer\",\r\n    },\r\n    { message: \"chatbot.directChat.secondMessage\", owner: \"bot\" },\r\n    {\r\n      message: \"chatbot.directChat.thirdMessage\",\r\n      owner: \"bot\",\r\n    },\r\n    {\r\n      formElements: directChatFormElements,\r\n      formSubmitID: \"46ac44df0ea8d59a83d300a64c763539\",\r\n    },\r\n  ],\r\n  furtherActions: [\"sendAnotherMessage\", \"sayHello\", \"showCV\"],\r\n};\r\n\r\nexport const actionRepository: Map<String, IChatAction> = new Map<String, IChatAction>();\r\n\r\nactionRepository.set(\"sayHello\", sayHello);\r\nactionRepository.set(\"showCV\", showCV);\r\nactionRepository.set(\"directChat\", directChat);\r\nactionRepository.set(\"sendAnotherMessage\", sendAnotherMessage);\r\n\r\nexport const initialActions: IChatAction[] = [sayHello, showCV, directChat];\r\n","import {\r\n  alpha,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { TFunction, useTranslation } from \"react-i18next\";\r\nimport { IChatFormElement, IChatForm } from \"../interface\";\r\nimport { darken } from \"@mui/system\";\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  & .MuiPaper-root {\r\n    background-color: ${(props) => props.theme.colors.mainblack};\r\n    color: ${(props) => props.theme.colors.whitefontcolor};\r\n  }\r\n`;\r\n\r\nconst StyledTitleWrapper = styled.div`\r\n  margin-right: 40px;\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  &:hover {\r\n    background-color: ${(props) => darken(props.theme.colors.mainblack, 0.3)};\r\n  }\r\n`;\r\n\r\nconst StyledDialogTitle = styled(DialogTitle)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid;\r\n  border-bottom-color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledClose = styled(Close)`\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledDialogContentText = styled(DialogContentText)`\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  margin: 10px 0;\r\n\r\n  & label {\r\n    color: ${(props) => props.theme.colors.whitefontcolor};\r\n  }\r\n\r\n  & label.Mui-focused {\r\n    color: #fbfffe;\r\n  }\r\n\r\n  & .MuiOutlinedInput-root {\r\n    color: #fbfffe;\r\n\r\n    & fieldset {\r\n      border-color: ${alpha(\"#fbfffe\", 0.5)};\r\n    }\r\n\r\n    &:hover fieldset {\r\n      border-color: #fbfffe;\r\n    }\r\n\r\n    &.Mui-focused fieldset {\r\n      border-color: #fbfffe;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDialogActions = styled(DialogActions)`\r\n  padding: 8px 24px;\r\n`;\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst renderFormElements = (formElements: IChatFormElement[], t: TFunction<\"translation\", undefined>) => {\r\n  return formElements.map((formElement: IChatFormElement, idx: number) => {\r\n    const renderedFormElement =\r\n      formElement.type === \"textarea\" ? (\r\n        <StyledTextField\r\n          autoFocus={idx === 0}\r\n          multiline\r\n          minRows={3}\r\n          size=\"small\"\r\n          name={formElement.name.toString()}\r\n          required={formElement.required}\r\n          label={t(formElement.label as any)}\r\n        />\r\n      ) : (\r\n        <StyledTextField\r\n          autoFocus={idx === 0}\r\n          type={formElement.type}\r\n          name={formElement.name.toString()}\r\n          required={formElement.required}\r\n          label={t(formElement.label as any)}\r\n          size=\"small\"\r\n        />\r\n      );\r\n    return renderedFormElement;\r\n  });\r\n};\r\n\r\nexport const ChatFormMessage = ({ formElements, formSubmitID }: IChatForm) => {\r\n  const { t } = useTranslation();\r\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsDialogOpen(true), 1200);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledDialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)} TransitionComponent={Transition}>\r\n      <StyledDialogTitle>\r\n        <StyledTitleWrapper>\r\n          <Typography gutterBottom component=\"p\">\r\n            Message me\r\n          </Typography>\r\n          <Typography variant=\"caption\" component=\"p\">\r\n            I will get back to you as soon as possible.\r\n          </Typography>\r\n        </StyledTitleWrapper>\r\n        <StyledIconButton onClick={() => setIsDialogOpen(false)}>\r\n          <StyledClose />\r\n        </StyledIconButton>\r\n      </StyledDialogTitle>\r\n      <StyledDialogContent>\r\n        <StyledDialogContentText></StyledDialogContentText>\r\n        <StyledForm method=\"POST\" action={`https://formsubmit.co/${formSubmitID}`} id=\"contact-form\">\r\n          {renderFormElements(formElements, t)}\r\n          <input type=\"hidden\" name=\"_next\" value=\"https://fredericbahr.github.io\" />\r\n          <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n          <input type=\"text\" name=\"_honey\" style={{ display: \"none\" }} />\r\n          <input type=\"hidden\" name=\"_template\" value=\"table\"></input>\r\n        </StyledForm>\r\n      </StyledDialogContent>\r\n      <StyledDialogActions>\r\n        <Button onClick={() => setIsDialogOpen(false)}>Cancel</Button>\r\n        <Button type=\"submit\" form=\"contact-form\">\r\n          Send\r\n        </Button>\r\n      </StyledDialogActions>\r\n    </StyledDialog>\r\n  );\r\n};\r\n","import { CardActions, CardContent } from \"@mui/material\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatText from \"./ChatText\";\r\nimport { isChatDownload, isChatForm, isChatTextMessage } from \"../../../utils/typePredicates\";\r\nimport { ChatDownload } from \"./ChatDownload\";\r\nimport ChatAction from \"./ChatAction\";\r\nimport { initialActions, actionRepository, initialMessages } from \"../../../data/chatMessages\";\r\nimport { ChatFormMessage } from \"./ChatFormMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IChatMessage, IChatAction } from \"../interface\";\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledCardActions = styled(CardActions)`\r\n  flex-wrap: wrap;\r\n  margin-bottom: 1vmax;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  overflow-y: scroll;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatMessages = () => {\r\n  const { t } = useTranslation();\r\n  const [messages, setTextMessages] = useState<IChatMessage[]>(initialMessages);\r\n  const [actions, setActions] = useState<IChatAction[]>(initialActions);\r\n\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  /**\r\n   * Scroll to the bottom of messages if textMessages or actionMessages change\r\n   */\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, actions]);\r\n\r\n  /**\r\n   * renders the textMessages\r\n   * If it is a chat message the ChatText is rendered\r\n   * Else the ChatDownload is rendered\r\n   * @returns ChatText and ChatDowload Components\r\n   */\r\n  const renderMessages = () => {\r\n    return messages.map((message: IChatMessage, idx: number) => {\r\n      if (isChatTextMessage(message)) {\r\n        return (\r\n          <ChatText key={idx} owner={message.owner}>\r\n            {t(message.message as any)}\r\n          </ChatText>\r\n        );\r\n      }\r\n\r\n      if (isChatDownload(message)) {\r\n        return (\r\n          <ChatDownload\r\n            key={idx}\r\n            owner={message.owner}\r\n            type={message.type}\r\n            fileName={message.fileName}\r\n            url={message.url}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (isChatForm(message)) {\r\n        return <ChatFormMessage key={idx} formElements={message.formElements} formSubmitID={message.formSubmitID} />;\r\n      }\r\n\r\n      return null;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the further action messages from the initalActions Map\r\n   * @param furtherActions the key of the further action\r\n   * @return array of further actions\r\n   */\r\n  const getFurtherActionMessages = (furtherActions: String[]): IChatAction[] => {\r\n    const furtherActionsArray: IChatAction[] = [];\r\n    furtherActions.forEach((action: String) => {\r\n      const chatAction: IChatAction | undefined = actionRepository.get(action);\r\n      if (chatAction) {\r\n        furtherActionsArray.push(chatAction);\r\n      }\r\n    });\r\n    return furtherActionsArray;\r\n  };\r\n\r\n  /**\r\n   * Adds the messages of the actionMessage to the textMessages after a delay\r\n   * After all messages are set it sets the new actionMessages\r\n   * @param actionMessage the actionMessage clicked by the user\r\n   */\r\n  const handleChatAction = async (actionMessage: IChatAction) => {\r\n    const delay = 1000;\r\n\r\n    setActions([]);\r\n\r\n    const delayedMessages = actionMessage.messges.map((message, idx) => {\r\n      return new Promise<void>((resolve) => {\r\n        setTimeout(() => {\r\n          setTextMessages((textMessages) => [...textMessages, message]);\r\n          resolve();\r\n        }, idx * delay);\r\n      });\r\n    });\r\n\r\n    await Promise.all(delayedMessages);\r\n\r\n    setActions(actionMessage.furtherActions ? getFurtherActionMessages(actionMessage.furtherActions) : []);\r\n  };\r\n\r\n  /**\r\n   * Scrolls the the messagesEndRef\r\n   */\r\n  const scrollToBottom = () => {\r\n    messagesEndRef?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <StyledCardContent>{renderMessages()}</StyledCardContent>\r\n      <StyledCardActions>\r\n        {actions.map((actionMessage: IChatAction, idx: number) => (\r\n          <ChatAction key={idx} handleAction={() => handleChatAction(actionMessage)}>\r\n            {t(actionMessage.actionText as any)}\r\n          </ChatAction>\r\n        ))}\r\n      </StyledCardActions>\r\n      <div ref={messagesEndRef} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;\r\n","import { IChatMessage, IChatTextMessage, IChatDownload, IChatForm } from \"../components/Chatbot/interface\";\n\n\nexport function isChatTextMessage(message: IChatMessage): message is IChatTextMessage {\n  return (message as IChatTextMessage).message !== undefined;\n}\n\nexport function isChatDownload(message: IChatMessage): message is IChatDownload {\n  return (message as IChatDownload).url !== undefined;\n}\n\nexport function isChatForm(message: IChatMessage): message is IChatForm {\n  return (message as IChatForm).formElements !== undefined;\n}\n","import { Card, Slide } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"../../../styles/globalStyles\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessages from \"./ChatMessages\";\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 1vmax;\n  right: 2vmax;\n  width: 25vw;\n  height: 75vh;\n\n  @media screen and (max-width: ${breakpoints.md}) {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1200;\n  }\n`;\n\nconst Chat = ({ clickHandler }: IProps) => {\n  return (\n    <Slide direction=\"up\" in>\n      <StyledCard>\n        <ChatHeader clickHandler={clickHandler} />\n        <ChatMessages />\n      </StyledCard>\n    </Slide>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { Fab, Grow, Tooltip } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport { ChatBubbleOutline } from \"@mui/icons-material\";\nimport { lighten, darken } from \"@mui/system\";\nimport { useTranslation } from \"react-i18next\";\n\nconst StyledFab = styled(Fab)`\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.05)};\n  position: fixed;\n  bottom: 1vmax;\n  right: 2vmax;\n\n  &:hover {\n    background-color: ${(props) => darken(props.theme.colors.mainblack, 1)};\n  }\n`;\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst FAB = ({ clickHandler }: IProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Grow in>\n      <Tooltip title={t(\"chatbot.tooltip\") as string}>\n        <StyledFab onClick={clickHandler} color=\"primary\">\n          <ChatBubbleOutline />\n        </StyledFab>\n      </Tooltip>\n    </Grow>\n  );\n};\n\nexport default FAB;\n","import React, { useState } from \"react\";\nimport Chat from \"./Chat/Chat\";\nimport FAB from \"./FAB\";\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return isOpen ? <Chat clickHandler={() => setIsOpen(false)} /> : <FAB clickHandler={() => setIsOpen(true)} />;\n};\n\nexport default Chatbot;\n","import { IExperience } from \"../components/Experience/interface\";\r\n\r\nexport const experiences: IExperience[] = [\r\n  {\r\n    index: 0,\r\n    shortCompanyName: \"ipoque\",\r\n    fullCompanyName: \"ipoque GmbH\",\r\n    companyUrl: \"https://www.ipoque.com/\",\r\n    jobTitle: \"experience.jobTitles.working-student\",\r\n    timeRange: {\r\n      from: \"2021-01-01\",\r\n      to: \"experience.time-present\",\r\n    },\r\n    description: [\"tesadfadft\", \"test\"],\r\n    technologies: [\"Lit\", \"Angular\", \"TypeScript\", \"DSL\", \"Meta Programming\", \"Compiler\"],\r\n  },\r\n  {\r\n    index: 1,\r\n    shortCompanyName: \"ipoque\",\r\n    fullCompanyName: \"ipoque GmbH\",\r\n    companyUrl: \"https://www.ipoque.com/\",\r\n    jobTitle: \"experience.jobTitles.bachelor-thesis\",\r\n    timeRange: {\r\n      from: \"2021-07-01\",\r\n      to: \"2020-10-01\",\r\n    },\r\n    description: [\r\n      \"experience.work-ipoque-bachelor.statement1\",\r\n      \"experience.work-ipoque-bachelor.statement2\",\r\n      \"experience.work-ipoque-bachelor.statement3\",\r\n    ],\r\n    technologies: [\"DSL\", \"JavaScript\", \"Meta Programming\", \"Compiler\"],\r\n  },\r\n  {\r\n    index: 2,\r\n    shortCompanyName: \"ipoque\",\r\n    fullCompanyName: \"ipoque GmbH\",\r\n    companyUrl: \"https://www.ipoque.com/\",\r\n    jobTitle: \"experience.jobTitles.intern\",\r\n    timeRange: {\r\n      from: \"2021-03-01\",\r\n      to: \"2021-05-31\",\r\n    },\r\n    description: [\r\n      \"experience.work-ipoque-intern.statement1\",\r\n      \"experience.work-ipoque-intern.statement2\",\r\n      \"experience.work-ipoque-intern.statement3\",\r\n    ],\r\n    technologies: [\"Angular\", \"TypeScript\", \"Generic Components\"],\r\n  },\r\n  {\r\n    index: 3,\r\n    shortCompanyName: \"GDMcom\",\r\n    fullCompanyName: \"GDMcom GmbH\",\r\n    companyUrl: \"https://gdmcom.de/\",\r\n    jobTitle: \"experience.jobTitles.working-student\",\r\n    timeRange: {\r\n      from: \"2019-06-01\",\r\n      to: \"2020-12-01\",\r\n    },\r\n    description: [\r\n      \"experience.work-gdmcom.statement1\",\r\n      \"experience.work-gdmcom.statement2\",\r\n      \"experience.work-gdmcom.statement3\",\r\n    ],\r\n    technologies: [\"VBA\", \"Microsoft Office Suite\", \"Automation\"],\r\n  },\r\n];\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  description: string | string[];\r\n}\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  margin: 2vh 0;\r\n  width: 85%;\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  margin: 2vh 0;\r\n  width: 85%;\r\n`;\r\n\r\nconst StyledListItem = styled.li`\r\n  list-style: none;\r\n  display: flex;\r\n  margin: 2vh 0;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"⏵\";\r\n    font-size: 0.7rem;\r\n    padding-right: 8px;\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nconst isArray = (arr: string | string[]): arr is string[] => {\r\n  return Array.isArray(arr);\r\n};\r\n\r\nexport const Description = ({ description, className }: IProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  const renderUnorderedList = (descriptions: string[]) => {\r\n    const listItems = descriptions.map((description: string) => (\r\n      <StyledListItem>{t(description as any)}</StyledListItem>\r\n    ));\r\n\r\n    return <StyledList>{listItems}</StyledList>;\r\n  };\r\n\r\n  return isArray(description) ? (\r\n    renderUnorderedList(description)\r\n  ) : (\r\n    <StyledTypography>{t(description as any)}</StyledTypography>\r\n  );\r\n};\r\n","import { Chip, darken, lighten, Paper, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  technologies: string[];\r\n}\r\n\r\nconst StyledStack = styled(Stack)`\r\n  margin-top: 3vh;\r\n`;\r\n\r\nconst Item = styled(Paper)`\r\n  font-size: 0.8rem;\r\n  padding: 0.25rem 0.5rem;\r\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.15)};\r\n  color: ${(props) => darken(props.theme.colors.mainwhite, 0.15)};\r\n`;\r\n\r\nexport const Technologies = ({ technologies = [] }: IProps) => {\r\n  return (\r\n    <StyledStack direction=\"row\" spacing={2}>\r\n      {technologies.map((technology: string) => (\r\n        <Item>{technology}</Item>\r\n      ))}\r\n    </StyledStack>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { darken, Typography, TypographyProps } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  from: string;\r\n  to: string | \"Present\";\r\n}\r\n\r\ntype TypographyType = React.ComponentType<TypographyProps<\"span\", { component: \"span\" }>>;\r\n\r\nconst StyledTypography: TypographyType = styled(Typography)`\r\n  font-size: 0.9rem;\r\n  color: ${(props) => darken(props.theme.colors.mainwhite, 0.5)};\r\n`;\r\n\r\nconst isDate = (date: string) => {\r\n  const formats = [\"YYYY-MM-DD\"];\r\n  return moment(date, formats).isValid();\r\n};\r\n\r\nexport const TimeRange = ({ from, to }: IProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <StyledTypography component=\"span\">{moment(from).format(\"MMMM YYYY\")}</StyledTypography>\r\n      <StyledTypography component=\"span\">{\" - \"}</StyledTypography>\r\n      <StyledTypography component=\"span\">{isDate(to) ? moment(to).format(\"MMMM YYYY\") : t(to as any)}</StyledTypography>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { transition } from \"../../utils/constants\";\n\ninterface IProps {\n  url: string;\n}\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.mainred};\n  transition: ${transition};\n  position: relative;\n  display: inline-block;\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 1.5px;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.mainred};\n    opacity: 0.5;\n    transition: ${transition};\n    bottom: 0.2rem;\n  }\n`;\n\nexport const StyledLink: FunctionComponent<IProps> = ({ url, children }) => {\n  return (\n    <Link href={url} target={\"_blank\"}>\n      {children}\n    </Link>\n  );\n};\n","import { Typography, TypographyProps } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledLink } from \"../../util-components/StyledLink\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  companyName: string;\r\n  companyUrl: string;\r\n}\r\n\r\ntype TypographyType = React.ComponentType<TypographyProps<\"span\", { component: \"span\" }>>;\r\n\r\n\r\nconst Wrapper = styled.h3`\r\n  display: flex;\r\n`;\r\n\r\nconst Title: TypographyType = styled(Typography)``;\r\n\r\nconst At: TypographyType = styled(Typography)`\r\n  margin: 0 10px;\r\n`;\r\n\r\n\r\n\r\nexport const WorkingTitle = ({ title, companyName, companyUrl }: IProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title component=\"span\">{title}</Title>\r\n      <At component=\"span\">@</At>\r\n      <StyledLink url={companyUrl}>{companyName}</StyledLink>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { Box } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProbs {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst StyledWrapper = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TabPanel = ({ children, className, value, index }: IProbs) => {\r\n  return (\r\n    <StyledWrapper className={className} role=\"tabpanel\" hidden={value !== index}>\r\n      {value === index && <Box>{children}</Box>}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n","import { Tab, Tabs } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\nimport { experiences } from \"../../data/experiences\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\nimport { Description } from \"./components/Description\";\r\nimport { Technologies } from \"./components/Technologies\";\r\nimport { TimeRange } from \"./components/TimeRange\";\r\nimport { WorkingTitle } from \"./components/WorkingTitle\";\r\nimport { IExperience } from \"./interface\";\r\nimport { TabPanel } from \"./TabPanel\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TabWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTab = styled(Tab)`\r\n  font-size: 1.1rem;\r\n  text-transform: none;\r\n  font-weight: 400;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledTabPanel = styled(TabPanel)`\r\n  align-self: start;\r\n`;\r\n\r\nconst Experience = () => {\r\n  const [value, setValue] = React.useState(0);\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <StyledSection id=\"experience\">\r\n      <SectionHeadline>{t(\"experience.headline\")}</SectionHeadline>\r\n      <TabWrapper>\r\n        {experiences.map((experience: IExperience) => (\r\n          <StyledTabPanel key={experience.index} value={value} index={experience.index}>\r\n            <WorkingTitle\r\n              title={t(experience.jobTitle as any)}\r\n              companyName={experience.fullCompanyName}\r\n              companyUrl={experience.companyUrl}\r\n            />\r\n            <TimeRange from={experience.timeRange.from} to={experience.timeRange.to} />\r\n            <Description description={experience.description} />\r\n            {experience.technologies && <Technologies technologies={experience.technologies} />}\r\n          </StyledTabPanel>\r\n        ))}\r\n        <Tabs orientation=\"vertical\" variant=\"scrollable\" onChange={handleChange} value={value}>\r\n          {experiences.map((experience: IExperience) => (\r\n            <StyledTab key={experience.index} label={t(experience.shortCompanyName as any)}></StyledTab>\r\n          ))}\r\n        </Tabs>\r\n      </TabWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-bottom: 5vh;\r\n`;\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  font-size: 0.8rem;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledTypography>Designed & Build by Frederic Bahr</StyledTypography>\r\n    </Wrapper>\r\n  );\r\n};\r\n","export const headSize = 150;\r\n\r\nexport const headPositionY = 400;\r\n\r\nexport const eyeSizeX = 30;\r\nexport const eyeSizeY = 30;\r\nexport const eyeSizeZ = 1;\r\n\r\nexport const eyePositionY = 10;\r\n\r\nexport const mouthPositionY = -27;\r\n\r\nexport const mainHairSizeX = 10;\r\nexport const mainHairSizeY = 10;\r\nexport const mainHairSizeZ = headSize * 0.75;\r\n\r\nexport const bodySizeX = 200;\r\nexport const bodySizeY = 250;\r\nexport const bodySizeZ = headSize * 0.75;\r\n\r\nexport const bodyPositionY = 200;\r\n\r\nexport const buttonSizeX = 10;\r\nexport const buttonSizeY = buttonSizeX;\r\nexport const buttonSizeZ = 1;\r\n\r\nexport const upperArmSizeX = 40;\r\nexport const upperArmSizeY = 140;\r\nexport const upperArmSizeZ = 50;\r\n\r\nexport const lowerArmSizeX = 40;\r\nexport const lowerArmSizeY = 75;\r\nexport const lowerArmSizeZ = 50;\r\n\r\nexport const thumbSizeX = 20;\r\nexport const thumbSizeY = 40;\r\nexport const thumbSizeZ = 50;\r\n\r\nexport const fingerSizeX = thumbSizeX;\r\nexport const fingerSizeY = 10;\r\nexport const fingerSizeZ = thumbSizeZ;\r\n\r\nexport const beltSizeX = bodySizeX + 10;\r\nexport const beltSizeY = 15;\r\nexport const beltSizeZ = bodySizeZ + 10;\r\nexport const beltPositionY = 75;\r\n\r\nexport const buckleSizeX = 25;\r\nexport const buckleSizeY = beltSizeY;\r\nexport const buckleSizeZ = 1;\r\n\r\nexport const legSizeX = bodySizeX / 2;\r\nexport const legSizeY = 300;\r\nexport const legSizeZ = bodySizeZ;\r\n\r\nexport const legSeperatorSizeX = 5;\r\nexport const legSeperatorSizeY = legSizeY / 2;\r\nexport const legSeperatorSizeZ = legSizeZ + 2;\r\n\r\nexport const legPositionY = -75;\r\n\r\nexport const ankleSizeX = legSizeX * 0.85;\r\nexport const ankleSizeY = 50;\r\nexport const ankleSizeZ = legSizeZ * 0.85;\r\n\r\nexport const footSizeX = ankleSizeX;\r\nexport const footSizeY = 35;\r\nexport const footSizeZ = legSizeZ + 20;\r\n\r\nexport const footPositionZ = -18.5;\r\nexport const anklePositonY = legPositionY - legSizeY / 2 - ankleSizeY / 2;\r\nexport const footPositionY = anklePositonY - ankleSizeY / 2;\r\n","import * as THREE from \"three\";\r\nimport { mergeMeshes } from \"./characterUtils\";\r\nimport { IArmMeshes } from \"./interface\";\r\nimport {\r\n  anklePositonY,\r\n  ankleSizeX,\r\n  ankleSizeY,\r\n  ankleSizeZ,\r\n  beltPositionY,\r\n  beltSizeX,\r\n  beltSizeY,\r\n  beltSizeZ,\r\n  bodyPositionY,\r\n  bodySizeX,\r\n  bodySizeY,\r\n  bodySizeZ,\r\n  buckleSizeX,\r\n  buckleSizeY,\r\n  buckleSizeZ,\r\n  buttonSizeX,\r\n  buttonSizeY,\r\n  buttonSizeZ,\r\n  eyePositionY,\r\n  eyeSizeX,\r\n  eyeSizeY,\r\n  eyeSizeZ,\r\n  fingerSizeX,\r\n  fingerSizeY,\r\n  fingerSizeZ,\r\n  footPositionY,\r\n  footPositionZ,\r\n  footSizeX,\r\n  footSizeY,\r\n  footSizeZ,\r\n  headPositionY,\r\n  headSize,\r\n  legPositionY,\r\n  legSeperatorSizeX,\r\n  legSeperatorSizeY,\r\n  legSeperatorSizeZ,\r\n  legSizeX,\r\n  legSizeY,\r\n  legSizeZ,\r\n  lowerArmSizeX,\r\n  lowerArmSizeY,\r\n  lowerArmSizeZ,\r\n  mainHairSizeX,\r\n  mainHairSizeY,\r\n  mainHairSizeZ,\r\n  mouthPositionY,\r\n  thumbSizeX,\r\n  thumbSizeY,\r\n  thumbSizeZ,\r\n  upperArmSizeX,\r\n  upperArmSizeY,\r\n  upperArmSizeZ,\r\n} from \"./units\";\r\n\r\n/**\r\n * Class for creating the replication of myself\r\n */\r\nexport class MiniMe {\r\n  public character: THREE.Group;\r\n\r\n  private skinMat: THREE.Material;\r\n  private eyeMat: THREE.Material;\r\n  private retinaMat: THREE.Material;\r\n  private eyeBrownMat: THREE.Material;\r\n  private oralCavityMat: THREE.Material;\r\n  private tongueMat: THREE.Material;\r\n  private teethMat: THREE.Material;\r\n  private glassMat: THREE.Material;\r\n  private earMat: THREE.Material;\r\n  private shirtMat: THREE.Material;\r\n  private beltMat: THREE.Material;\r\n  private buckleMat: THREE.Material;\r\n  private legMat: THREE.Material;\r\n  private legSeperatorMat: THREE.Material;\r\n  private footMat: THREE.Material;\r\n  private hairMat: THREE.Material;\r\n  private buttonMat: THREE.Material;\r\n\r\n  /**\r\n   * defines the materials and calls draw\r\n   */\r\n  constructor() {\r\n    this.character = new THREE.Group();\r\n\r\n    this.skinMat = new THREE.MeshLambertMaterial({ color: \"#e0bea5\" });\r\n    this.eyeMat = new THREE.MeshLambertMaterial({ color: \"#fbfffe\" });\r\n    this.retinaMat = new THREE.MeshLambertMaterial({ color: \"#0aa5ff\" });\r\n    this.eyeBrownMat = new THREE.MeshLambertMaterial({ color: \"#5a3825\" });\r\n    this.oralCavityMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.tongueMat = new THREE.MeshLambertMaterial({ color: \"#cc0e00\" });\r\n    this.teethMat = new THREE.MeshLambertMaterial({ color: \"#fbfffe\" });\r\n    this.glassMat = new THREE.MeshLambertMaterial({\r\n      color: \"#181114\",\r\n      side: THREE.DoubleSide,\r\n    });\r\n    this.earMat = new THREE.MeshLambertMaterial({ color: \"#deb08e\" });\r\n    this.shirtMat = new THREE.MeshLambertMaterial({ color: \"#cc0e00\" });\r\n    this.beltMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.buckleMat = new THREE.MeshLambertMaterial({\r\n      color: \"#808080\",\r\n      side: THREE.DoubleSide,\r\n    });\r\n    this.legMat = new THREE.MeshLambertMaterial({ color: \"#003049\" });\r\n    this.legSeperatorMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.footMat = new THREE.MeshLambertMaterial({ color: \"#f77f00\" });\r\n    this.hairMat = new THREE.MeshLambertMaterial({ color: \"#ad9032\" });\r\n    this.buttonMat = new THREE.MeshLambertMaterial({ color: \"#808080\", side: THREE.DoubleSide });\r\n\r\n    this.draw();\r\n  }\r\n\r\n  /**\r\n   * Sets the material of the color\r\n   * @param colorIndex the index of the color that is set\r\n   */\r\n  public setShirtMat(colorIndex: number) {\r\n    const colors = [\"#cc0e00\", \"#0aa5ff\"];\r\n    this.shirtMat = new THREE.MeshLambertMaterial({\r\n      color: colors[colorIndex],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Transforms degree to a radian value\r\n   * @param degrees the degrees to transform\r\n   * @returns degrees as radian value\r\n   */\r\n  private deg2rad = (degrees: number) => {\r\n    const halfCircleDegree = 180;\r\n    return degrees * (Math.PI / halfCircleDegree);\r\n  };\r\n\r\n  /**\r\n   * creates the head of the character\r\n   */\r\n  private createHead = () => {\r\n    /**\r\n     * Head\r\n     */\r\n    const headGeometry = new THREE.BoxGeometry(headSize, headSize, headSize * 0.75);\r\n    const head = new THREE.Mesh(headGeometry, this.skinMat);\r\n    head.position.set(0, headPositionY, 0);\r\n\r\n    const [eyes, eyeBrowns]: THREE.Group[] = this.createEyesAndEyebrowns(head);\r\n    const mouth: THREE.Group = this.createMouth(head);\r\n    const [glasses, ears]: THREE.Group[] = this.createGlassesAndEars(head);\r\n\r\n    head.add(eyes, eyeBrowns, mouth, glasses, ears);\r\n    this.character.add(head);\r\n  };\r\n\r\n  /**\r\n   * Creates the eyes and eyebrowns of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @returns {THREE.Group} an array containing the eyes and eyeBrowns\r\n   */\r\n  private createEyesAndEyebrowns = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const eyeGeometry = new THREE.BoxGeometry(eyeSizeX, eyeSizeY, eyeSizeZ);\r\n    const eyes = this.createEyes(head, eyeGeometry);\r\n    const eyeBrowns = this.createEyeBrowns(head, eyeGeometry);\r\n\r\n    return [eyes, eyeBrowns];\r\n  };\r\n\r\n  /**\r\n   * Creates the eyes of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param eyeGeometry the geometry for the eyes\r\n   * @returns {THREE.Group} the eyes of the character\r\n   */\r\n  private createEyes = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    eyeGeometry: THREE.BoxGeometry,\r\n  ): THREE.Group => {\r\n    const eyes = new THREE.Group();\r\n\r\n    const leftEye = new THREE.Mesh(eyeGeometry, this.eyeMat);\r\n    leftEye.position.set(head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 2);\r\n\r\n    const rightEye = new THREE.Mesh(eyeGeometry, this.eyeMat);\r\n    rightEye.position.set(-head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 2);\r\n\r\n    const [leftRetina, rightRetina]: THREE.Mesh<THREE.BoxGeometry, THREE.Material>[] = this.createRetinas();\r\n    leftEye.add(leftRetina);\r\n    rightEye.add(rightRetina);\r\n\r\n    eyes.add(leftEye, rightEye);\r\n\r\n    return eyes;\r\n  };\r\n\r\n  /**\r\n   * Creates the retinas of the character\r\n   * @returns an array containing the meshes representing the left and right retina\r\n   */\r\n  private createRetinas = (): THREE.Mesh<THREE.BoxGeometry, THREE.Material>[] => {\r\n    const retinaGeometry = new THREE.BoxGeometry(7.5, 7.5, 1);\r\n\r\n    const leftRetina = new THREE.Mesh(retinaGeometry, this.retinaMat);\r\n    leftRetina.position.set(-2.5, -5, -1);\r\n\r\n    const rightRetina = new THREE.Mesh(retinaGeometry, this.retinaMat);\r\n    rightRetina.position.set(2.5, -5, -1);\r\n\r\n    return [leftRetina, rightRetina];\r\n  };\r\n\r\n  /**\r\n   * Creates the eyebrowns of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param eyeGeometry the geometry of the eyes\r\n   * @returns {THREE.Group} the eyebrowns of hte character\r\n   */\r\n  private createEyeBrowns = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    eyeGeometry: THREE.BoxGeometry,\r\n  ): THREE.Group => {\r\n    const eyeBrowns = new THREE.Group();\r\n    const eyeBrownGeometry = new THREE.BoxGeometry(40, 10, 1);\r\n    const leftEyeBrown = new THREE.Mesh(eyeBrownGeometry, this.eyeBrownMat);\r\n    leftEyeBrown.position.set(\r\n      head.geometry.parameters.width / 4,\r\n      eyeGeometry.parameters.height + eyeGeometry.parameters.height * 0.5,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    leftEyeBrown.rotateZ(this.deg2rad(2));\r\n\r\n    const rightEyeBrown = new THREE.Mesh(eyeBrownGeometry, this.eyeBrownMat);\r\n    rightEyeBrown.position.set(\r\n      -head.geometry.parameters.width / 4,\r\n      eyeGeometry.parameters.height + eyeGeometry.parameters.height * 0.5,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    rightEyeBrown.rotateZ(this.deg2rad(-2));\r\n\r\n    eyeBrowns.add(leftEyeBrown, rightEyeBrown);\r\n\r\n    return eyeBrowns;\r\n  };\r\n\r\n  /**\r\n   * Creates the mouth of the character\r\n   * @param head  the mesh representing the head of the character\r\n   * @returns the mouth of the character\r\n   */\r\n  private createMouth = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group => {\r\n    const mouth = new THREE.Group();\r\n    const oralCavityGeometry = new THREE.CircleGeometry(25, 5, Math.PI, Math.PI);\r\n    const teethGeometry = new THREE.BoxGeometry(48, 5, 1);\r\n    const tongueGeometry = new THREE.BoxGeometry(15, 5, 1);\r\n\r\n    const oralCavity = new THREE.Mesh(oralCavityGeometry, this.oralCavityMat);\r\n    oralCavity.material.side = THREE.DoubleSide;\r\n    oralCavity.position.set(0, mouthPositionY, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    const teeth = new THREE.Mesh(teethGeometry, this.teethMat);\r\n    teeth.position.set(0, mouthPositionY, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    const tongue = new THREE.Mesh(tongueGeometry, this.tongueMat);\r\n    tongue.position.set(0, -46, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    mouth.add(oralCavity, teeth, tongue);\r\n\r\n    return mouth;\r\n  };\r\n\r\n  /**\r\n   * Creates the glasses and ears of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @returns an array containing the glasses and ears\r\n   */\r\n  private createGlassesAndEars = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const glassGeometry = new THREE.RingGeometry(27, 32, 4);\r\n    const glasses = this.createGlasses(head, glassGeometry);\r\n    const ears = this.createEars(head, glassGeometry);\r\n\r\n    return [glasses, ears];\r\n  };\r\n\r\n  /**\r\n   * Creates the glasses of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param glassGeometry the geometry of the glasses\r\n   * @returns the glasses of the character\r\n   */\r\n  private createGlasses = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>, glassGeometry: THREE.RingGeometry) => {\r\n    const glasses = new THREE.Group();\r\n    const middleConnectorGeometry = new THREE.BoxGeometry(5, 30, 1);\r\n    const outerConnectorGeometry = new THREE.BoxGeometry(5, 17, 1);\r\n    const sideConnectorGeometry = new THREE.BoxGeometry(5, head.geometry.parameters.depth / 2, 1);\r\n\r\n    const leftGlass = new THREE.Mesh(glassGeometry, this.glassMat);\r\n    leftGlass.position.set(head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 1);\r\n    leftGlass.rotateZ(this.deg2rad(45));\r\n\r\n    const rightGlass = new THREE.Mesh(glassGeometry, this.glassMat);\r\n    rightGlass.position.set(-head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 1);\r\n    rightGlass.rotateZ(this.deg2rad(45));\r\n\r\n    const middleConnector = new THREE.Mesh(middleConnectorGeometry, this.glassMat);\r\n    middleConnector.position.set(0, glassGeometry.parameters.outerRadius / 2, -head.geometry.parameters.depth / 2 - 1);\r\n    middleConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const leftOuterConnector = new THREE.Mesh(outerConnectorGeometry, this.glassMat);\r\n    leftOuterConnector.position.set(\r\n      leftGlass.position.x + leftGlass.geometry.parameters.innerRadius + 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    leftOuterConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const rightOuterConnector = new THREE.Mesh(outerConnectorGeometry, this.glassMat);\r\n    rightOuterConnector.position.set(\r\n      rightGlass.position.x - rightGlass.geometry.parameters.innerRadius - 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    rightOuterConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const leftSideConnector = new THREE.Mesh(sideConnectorGeometry, this.glassMat);\r\n    leftSideConnector.position.set(\r\n      head.geometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 4,\r\n    );\r\n    leftSideConnector.rotateY(this.deg2rad(90));\r\n    leftSideConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const rightSideConnector = new THREE.Mesh(sideConnectorGeometry, this.glassMat);\r\n    rightSideConnector.position.set(\r\n      -head.geometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 4,\r\n    );\r\n    rightSideConnector.rotateY(this.deg2rad(90));\r\n    rightSideConnector.rotateZ(this.deg2rad(90));\r\n\r\n    glasses.add(\r\n      leftGlass,\r\n      rightGlass,\r\n      middleConnector,\r\n      leftOuterConnector,\r\n      rightOuterConnector,\r\n      leftSideConnector,\r\n      rightSideConnector,\r\n    );\r\n\r\n    return glasses;\r\n  };\r\n\r\n  /**\r\n   * Creates the ears of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param glassGeometry the geometry of classes\r\n   * @returns the ears of the character\r\n   */\r\n  private createEars = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    glassGeometry: THREE.RingGeometry,\r\n  ): THREE.Group => {\r\n    const ears = new THREE.Group();\r\n    const earGeometry = new THREE.BoxGeometry(10, 30, 25);\r\n\r\n    const leftEar = new THREE.Mesh(earGeometry, this.earMat);\r\n    leftEar.position.set(\r\n      head.geometry.parameters.width / 2 + earGeometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -4,\r\n    );\r\n\r\n    const rightEar = new THREE.Mesh(earGeometry, this.earMat);\r\n    rightEar.position.set(-head.geometry.parameters.width / 2, glassGeometry.parameters.outerRadius / 2, -4);\r\n\r\n    ears.add(leftEar, rightEar);\r\n\r\n    return ears;\r\n  };\r\n\r\n  /**\r\n   * Creates the hairs of the character\r\n   */\r\n  private createHairs = () => {\r\n    const hair: THREE.Group = new THREE.Group();\r\n    let mainHair: THREE.Mesh;\r\n    const basicHairs: THREE.Group = new THREE.Group();\r\n    let detailHairs: THREE.Group;\r\n    let baiscHairGeometry: THREE.BoxGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ);\r\n\r\n    const maxTopHair = headSize / mainHairSizeX;\r\n    this.createTopHair(basicHairs, baiscHairGeometry, maxTopHair);\r\n\r\n    const maxBackHair = headSize / mainHairSizeX + 2;\r\n    this.createBackHair(basicHairs, maxBackHair);\r\n\r\n    const maxSideHair = (headSize * 0.75) / mainHairSizeX;\r\n    this.createSideHair(basicHairs, baiscHairGeometry, maxSideHair);\r\n    this.createSideHair(basicHairs, baiscHairGeometry, maxSideHair, false);\r\n\r\n    detailHairs = this.createDetailHairs();\r\n\r\n    mainHair = mergeMeshes(basicHairs, this.hairMat);\r\n\r\n    hair.add(mainHair, detailHairs);\r\n    this.character.add(hair);\r\n  };\r\n\r\n  /**\r\n   * Creates the basic top hair of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param baiscHairGeometry the geometry of the basic hair\r\n   * @param maxTopHair how many blocks are needed for the top hairs\r\n   */\r\n  private createTopHair = (basicHairs: THREE.Group, baiscHairGeometry: THREE.BoxGeometry, maxTopHair: number) => {\r\n    const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2;\r\n    for (let i = 0; i < maxTopHair; i++) {\r\n      const hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 - mainHairSizeX / 2 - i * mainHairSizeX;\r\n      hair.position.set(hairPositionX, hairPositionY, 0);\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the basic back hair of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param maxBackHair how many blocks are needed for the back hairs\r\n   */\r\n  private createBackHair = (basicHairs: THREE.Group, maxBackHair: number) => {\r\n    for (let i = 0; i < maxBackHair; i++) {\r\n      const backHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.6);\r\n      const hair = new THREE.Mesh(backHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 + mainHairSizeX / 2 - i * mainHairSizeX;\r\n      const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY - backHairGeometry.parameters.depth / 2;\r\n      const hairPositionZ = mainHairSizeZ / 2;\r\n      hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      hair.rotateX(this.deg2rad(90));\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the basic side hairs of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param baiscHairGeometry  the geometry of basic hairs\r\n   * @param maxSideHair how many blocks are needed for the side hairs\r\n   * @param {boolean} isLeftSide whether it should be rendered on the left or right side\r\n   */\r\n  private createSideHair = (\r\n    basicHairs: THREE.Group,\r\n    baiscHairGeometry: THREE.BoxGeometry,\r\n    maxSideHair: number,\r\n    isLeftSide: boolean = true,\r\n  ) => {\r\n    for (let i = 0; i < maxSideHair; i++) {\r\n      let hair: THREE.Mesh;\r\n      const sideMultiplier = isLeftSide ? 1 : -1;\r\n      const hairPositionX = sideMultiplier * (headSize / 2 + mainHairSizeX / 2);\r\n      const hairPositionZ = (-headSize * 0.75) / 2 + i * mainHairSizeX;\r\n\r\n      if (i === 12) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 25);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 23.1;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i === 0) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 10);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 15.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i === 1) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 7.5);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 14.35;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i >= 10) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 10);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 15.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i < 4 || i >= 8) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 10.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.4 + 3);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 6.5;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      }\r\n\r\n      hair.rotateY(this.deg2rad(90));\r\n      hair.rotateX(this.deg2rad(90));\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the detail hairs of the character\r\n   * @returns the detail hairs of the character\r\n   */\r\n  private createDetailHairs = (): THREE.Group => {\r\n    const detailHairs: THREE.Group = new THREE.Group();\r\n    let hairGeometry = new THREE.BoxGeometry(headSize * 0.8, mainHairSizeY, 10);\r\n    const hairPositionZ = (-headSize * 0.75) / 2 - hairGeometry.parameters.depth / 2;\r\n\r\n    this.createFrontHairParting(detailHairs, hairPositionZ, hairGeometry);\r\n\r\n    this.createFrontHairRightSideDetails(detailHairs, hairPositionZ);\r\n\r\n    this.createBackHairDetails(detailHairs);\r\n\r\n    return detailHairs;\r\n  };\r\n\r\n  /**\r\n   * Creates the hair parting on the front left side\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   * @param hairPositionZ the position of the hair on the z-axis\r\n   * @param hairGeometry the geometry of the hair\r\n   */\r\n  private createFrontHairParting = (\r\n    detailHairs: THREE.Group,\r\n    hairPositionZ: number,\r\n    hairGeometry: THREE.BoxGeometry,\r\n  ) => {\r\n    // hair lowest stripe\r\n    let hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    let hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    let hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 - hairGeometry.parameters.height;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n\r\n    // hair parting second lowest stripe\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.75, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n\r\n    // hair parting third lowest stripe\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.63, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 + hairGeometry.parameters.height;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n  };\r\n\r\n  /**\r\n   * Creates the details on the right side\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   * @param hairPositionZ the position of the hair on the z-axis\r\n   */\r\n  private createFrontHairRightSideDetails = (detailHairs: THREE.Group, hairPositionZ: number) => {\r\n    let hairGeometry = new THREE.BoxGeometry(headSize / 4, mainHairSizeY, 10);\r\n    let hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    let hairPositionX = -headSize / 2 - mainHairSizeX / 2;\r\n    let hairPositionY = headPositionY + headSize / 2 - mainHairSizeY + 1.2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.225, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 6.5;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 2 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 3 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 4 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.16, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 5 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n  };\r\n\r\n  // private createTopHairDetails = (detailHairs: THREE.Group) => {\r\n  //   const maxTopHairDetails = (headSize * 0.63) / topHairDetailsSizeX - 1;\r\n  //   const geometry = new THREE.BoxGeometry(topHairDetailsSizeX, topHairDetailsSizeY, topHairDetailsSizeZ);\r\n  //   const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 + topHairDetailsSizeY;\r\n  //   const hairPositionZ = (-headSize * 0.75) / 2 + topHairDetailsSizeZ / 2;\r\n\r\n  //   for (let i = 0; i < maxTopHairDetails; i++) {\r\n  //     const hairPositionX = headSize / 2 - mainHairSizeX / 2 + topHairDetailsSizeX - i * topHairDetailsSizeX;\r\n  //     const hair = new THREE.Mesh(geometry, this.hairMat);\r\n  //     hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n  //     detailHairs.add(hair);\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * Creates the detail hairs on the back\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   */\r\n  private createBackHairDetails = (detailHairs: THREE.Group) => {\r\n    const maxBackDetailsHair = headSize / mainHairSizeX + 2;\r\n    const backHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.6);\r\n    const half = Math.floor((maxBackDetailsHair - 1) / 2);\r\n    const base = 12;\r\n    const step = 7;\r\n\r\n    for (let i = 0; i < maxBackDetailsHair; i++) {\r\n      const sameStartSameEndIdx = i > half ? half - (i - half) : i;\r\n      let factor = this.getFactorForBackHairDetails(sameStartSameEndIdx);\r\n\r\n      const hair = new THREE.Mesh(backHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 + mainHairSizeX / 2 - i * mainHairSizeX;\r\n      const hairPositionZ = mainHairSizeZ / 2;\r\n      const hairPositionY =\r\n        headPositionY + headSize / 2 + mainHairSizeY - backHairGeometry.parameters.depth / 2 - (base + factor * step);\r\n\r\n      hair.rotateX(this.deg2rad(90));\r\n      hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n\r\n      detailHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the factor for positioning the back side hair blocks\r\n   * @param idx the index of the loop\r\n   * @returns {number} the factor for the positioning\r\n   */\r\n  private getFactorForBackHairDetails = (idx: number): number => {\r\n    if (idx <= 1) return 0;\r\n\r\n    if (idx <= 3) return 1;\r\n\r\n    if (idx <= 5) return 2;\r\n\r\n    return 3;\r\n  };\r\n\r\n  /**\r\n   * Creates the body of the character\r\n   */\r\n  private createBody = () => {\r\n    const corpusGeometry = new THREE.BoxGeometry(bodySizeX, bodySizeY, bodySizeZ);\r\n    const body = new THREE.Group();\r\n\r\n    const corpus = new THREE.Mesh(corpusGeometry, this.shirtMat);\r\n    corpus.position.set(0, bodyPositionY, 0);\r\n\r\n    const [leftArm, rightArm]: THREE.Group[] = this.createArms(corpus);\r\n\r\n    const buttons: THREE.Group = this.createButtons();\r\n\r\n    corpus.add(leftArm, rightArm, buttons);\r\n\r\n    body.add(corpus);\r\n    this.character.add(body);\r\n  };\r\n\r\n  /**\r\n   * Creates the buttons on the shirt\r\n   * @returns the buttons created\r\n   */\r\n  private createButtons = (): THREE.Group => {\r\n    const buttons: THREE.Group = new THREE.Group();\r\n\r\n    const totalButtons = 4;\r\n\r\n    for (let i = 0; i < totalButtons; i++) {\r\n      const button = this.createButton(i);\r\n      buttons.add(button);\r\n    }\r\n\r\n    return buttons;\r\n  };\r\n\r\n  /**\r\n   * Creates a single button of the shirt\r\n   * @param factor the factor for positiong\r\n   * @returns a single button of the shirt\r\n   */\r\n  private createButton = (factor: number): THREE.Mesh => {\r\n    const buttonPositionYOffset = -35;\r\n    const buttonPositionYStep = 50;\r\n    const buttonGeometry = new THREE.BoxGeometry(buttonSizeX, buttonSizeY, buttonSizeZ);\r\n    const button = new THREE.Mesh(buttonGeometry, this.buttonMat);\r\n    const buttonPositionZ = -bodySizeZ / 2 - 1;\r\n    const buttonPositionX = 0;\r\n    const buttonPositionY = buttonPositionYOffset + bodySizeY / 2 - factor * buttonPositionYStep;\r\n    button.position.set(buttonPositionX, buttonPositionY, buttonPositionZ);\r\n\r\n    return button;\r\n  };\r\n\r\n  /**\r\n   * Creates the arms of the character\r\n   * @param corpus the mesh representing the corpus of the character\r\n   * @returns an array containing the left and right arm\r\n   */\r\n  private createArms = (corpus: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const upperArmGeometry = new THREE.BoxGeometry(upperArmSizeX, upperArmSizeY, upperArmSizeZ);\r\n    const lowerArmGeometry = new THREE.BoxGeometry(lowerArmSizeX, lowerArmSizeY, lowerArmSizeZ);\r\n    const thumbGeometry = new THREE.BoxGeometry(thumbSizeX, thumbSizeY, thumbSizeZ);\r\n    const fingerGeometry = new THREE.BoxGeometry(fingerSizeX, fingerSizeY, fingerSizeZ);\r\n\r\n    const leftArm = this.createArm(corpus.geometry, upperArmGeometry, lowerArmGeometry, thumbGeometry, fingerGeometry);\r\n    const rightArm = this.createArm(\r\n      corpus.geometry,\r\n      upperArmGeometry,\r\n      lowerArmGeometry,\r\n      thumbGeometry,\r\n      fingerGeometry,\r\n      false,\r\n    );\r\n\r\n    return [leftArm, rightArm];\r\n  };\r\n\r\n  /**\r\n   * Creates one arm\r\n   * @param corpus the mesh representing the corpus of the character\r\n   * @param upperArmGeometry the geometry of the upper arm\r\n   * @param lowerArmGeometry the geometry of the lower arm\r\n   * @param thumbGeometry the geometry of the thumb\r\n   * @param fingerGeometry the geometry of the finger\r\n   * @param {boolean} isLeftArm whether its the left or right arm\r\n   * @returns the created arm\r\n   */\r\n  private createArm = (\r\n    corpus: THREE.BoxGeometry,\r\n    upperArmGeometry: THREE.BoxGeometry,\r\n    lowerArmGeometry: THREE.BoxGeometry,\r\n    thumbGeometry: THREE.BoxGeometry,\r\n    fingerGeometry: THREE.BoxGeometry,\r\n    isLeftArm: boolean = true,\r\n  ) => {\r\n    const arm = new THREE.Group();\r\n    const hand = new THREE.Group();\r\n    const sideModificator = isLeftArm ? 1 : -1;\r\n\r\n    const { upperArm, lowerArm, thumb, fingers } = this.createArmMeshes(\r\n      upperArmGeometry,\r\n      lowerArmGeometry,\r\n      thumbGeometry,\r\n      fingerGeometry,\r\n    );\r\n    hand.add(thumb, fingers);\r\n\r\n    upperArm.position.set(\r\n      sideModificator * (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2),\r\n      corpus.parameters.height / 2 - upperArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    lowerArm.position.set(\r\n      sideModificator * (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2),\r\n      upperArm.position.y - upperArmGeometry.parameters.height / 2 - lowerArm.geometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    thumb.position.set(\r\n      sideModificator *\r\n        (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2 + thumbGeometry.parameters.width / 2),\r\n      lowerArm.position.y - lowerArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    fingers.position.set(\r\n      sideModificator *\r\n        (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2 - fingerGeometry.parameters.width / 2),\r\n      lowerArm.position.y - lowerArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n\r\n    arm.add(upperArm, lowerArm, hand);\r\n\r\n    return arm;\r\n  };\r\n\r\n  /**\r\n   * Creates the arm meshes\r\n   * @param upperArmGeometry the geometry of the upper arm\r\n   * @param lowerArmGeometry the geomtry of the lower arm\r\n   * @param thumbGeometry the geometry of the thumb\r\n   * @param fingerGeometry the geometry of the finger\r\n   * @returns an object containing the meshes\r\n   */\r\n  private createArmMeshes = (\r\n    upperArmGeometry: THREE.BoxGeometry,\r\n    lowerArmGeometry: THREE.BoxGeometry,\r\n    thumbGeometry: THREE.BoxGeometry,\r\n    fingerGeometry: THREE.BoxGeometry,\r\n  ): IArmMeshes => {\r\n    const upperArm = new THREE.Mesh(upperArmGeometry, this.shirtMat);\r\n    const lowerArm = new THREE.Mesh(lowerArmGeometry, this.skinMat);\r\n    const thumb = new THREE.Mesh(thumbGeometry, this.skinMat);\r\n    const fingers = new THREE.Mesh(fingerGeometry, this.skinMat);\r\n\r\n    return { upperArm, lowerArm, thumb, fingers };\r\n  };\r\n\r\n  /**\r\n   * Creates the belt of the character\r\n   */\r\n  private createBelt = () => {\r\n    const beltGeometry = new THREE.BoxGeometry(beltSizeX, beltSizeY, beltSizeZ);\r\n    const buckleGeometry = new THREE.BoxGeometry(buckleSizeX, buckleSizeY, buckleSizeZ);\r\n\r\n    const belt = new THREE.Mesh(beltGeometry, this.beltMat);\r\n    belt.position.set(0, beltPositionY, 0);\r\n\r\n    const buckle = new THREE.Mesh(buckleGeometry, this.buckleMat);\r\n    buckle.position.z = -1 * (beltGeometry.parameters.depth / 2 + 1);\r\n\r\n    belt.add(buckle);\r\n    this.character.add(belt);\r\n  };\r\n\r\n  /**\r\n   * Creates the leg of the character\r\n   */\r\n  private createLegs = () => {\r\n    const legs = new THREE.Group();\r\n    const legGeometry = new THREE.BoxGeometry(legSizeX, legSizeY, legSizeZ);\r\n    const legSeperatorGeometry = new THREE.BoxGeometry(legSeperatorSizeX, legSeperatorSizeY, legSeperatorSizeZ);\r\n\r\n    const leftLeg = new THREE.Mesh(legGeometry, this.legMat);\r\n    leftLeg.position.set(legGeometry.parameters.width / 2, legPositionY, 0);\r\n\r\n    const rightLeg = new THREE.Mesh(legGeometry, this.legMat);\r\n    rightLeg.position.set(-legGeometry.parameters.width / 2, legPositionY, 0);\r\n\r\n    const legSeperator = new THREE.Mesh(legSeperatorGeometry, this.legSeperatorMat);\r\n    legSeperator.position.set(0, legPositionY - legSeperatorGeometry.parameters.height / 2, 0);\r\n\r\n    legs.add(leftLeg, rightLeg, legSeperator);\r\n    this.character.add(legs);\r\n  };\r\n\r\n  /**\r\n   * creates the feet of the character\r\n   */\r\n  private createFeet = () => {\r\n    const feet = new THREE.Group();\r\n    const ankleGeometry = new THREE.BoxGeometry(ankleSizeX, ankleSizeY, ankleSizeZ);\r\n    const footGeometry = new THREE.BoxGeometry(footSizeX, footSizeY, footSizeZ);\r\n\r\n    const leftAnkle = new THREE.Mesh(ankleGeometry, this.footMat);\r\n    leftAnkle.position.set(legSizeX / 2, anklePositonY, 0);\r\n    const rightAnkle = new THREE.Mesh(ankleGeometry, this.footMat);\r\n    rightAnkle.position.set(-legSizeX / 2, anklePositonY, 0);\r\n\r\n    const leftFoot = new THREE.Mesh(footGeometry, this.footMat);\r\n    leftFoot.position.set(legSizeX / 2, footPositionY, footPositionZ);\r\n    const rightFoot = new THREE.Mesh(footGeometry, this.footMat);\r\n    rightFoot.position.set(-legSizeX / 2, footPositionY, footPositionZ);\r\n\r\n    feet.add(leftAnkle, rightAnkle, leftFoot, rightFoot);\r\n    this.character.add(feet);\r\n  };\r\n\r\n  private transform = () => {\r\n    this.character.translateY(-50);\r\n    this.character.scale.set(1.05, 1.05, 1.05);\r\n  };\r\n\r\n  /**\r\n   * draws the character\r\n   */\r\n  public draw = () => {\r\n    this.createHead();\r\n    this.createHairs();\r\n    this.createBody();\r\n    this.createBelt();\r\n    this.createLegs();\r\n    this.createFeet();\r\n    this.transform();\r\n    console.log(\"drawing\");\r\n  };\r\n\r\n  public animate = () => {\r\n    //console.log(this.character);\r\n    console.log(\"character\");\r\n    //stopAnimation();\r\n  };\r\n}\r\n","import * as THREE from \"three\";\r\nimport { mergeBufferGeometries } from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\nconst isMesh = (obj: THREE.Object3D): obj is THREE.Mesh => {\r\n  return obj.type === \"Mesh\";\r\n};\r\n\r\nexport const mergeMeshes = (group: THREE.Group, material: THREE.Material) => {\r\n  const geometries: THREE.BufferGeometry[] = [];\r\n  group.children.forEach((obj: THREE.Object3D) => {\r\n    if (isMesh(obj)) {\r\n      const geometry = obj.geometry.clone();\r\n      obj.updateMatrix();\r\n      geometry.applyMatrix4(obj.matrix);\r\n      geometries.push(geometry);\r\n    }\r\n  });\r\n\r\n  return new THREE.Mesh(mergeBufferGeometries(geometries, true), material);\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\nimport { MiniMe } from \"./miniMe\";\r\nimport styled from \"styled-components\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\n\r\nconst StyledDiv = styled.div`\r\n  cursor: crosshair;\r\n`;\r\n\r\nexport const Character = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const shouldAnimate = useRef(true);\r\n  const mediaQuery = useMediaQuery(`(min-width: ${breakpoints.md})`);\r\n  const character = new MiniMe();\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n\r\n    const camera = new THREE.PerspectiveCamera(65, window.innerWidth / window.innerHeight, 0.1, 4000);\r\n\r\n    camera.position.set(0, 400, -1000);\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n    const axesHelper = new THREE.AxesHelper(2000);\r\n    scene.add(axesHelper);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.update();\r\n\r\n    ref?.current?.replaceChildren(renderer.domElement);\r\n\r\n    const init = () => {\r\n      window.addEventListener(\"load\", () => {});\r\n    };\r\n\r\n    const createLight = () => {\r\n      const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.7);\r\n      const ambientLight = new THREE.AmbientLight(0x404040, 1.2);\r\n\r\n      scene.add(hemiLight);\r\n      scene.add(ambientLight);\r\n    };\r\n\r\n    const createCharacter = () => {\r\n      scene.add(character.character);\r\n    };\r\n\r\n    function resizeCanvasToDisplaySize() {\r\n      const canvas = renderer.domElement;\r\n      const width = canvas.clientWidth;\r\n      const height = canvas.clientHeight;\r\n      if (canvas.width !== width || canvas.height !== height) {\r\n        // you must pass false here or three.js sadly fights the browser\r\n        renderer.setSize(width, height, true);\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n    }\r\n    const animate = function () {\r\n      requestAnimationFrame(animate);\r\n\r\n      if (shouldAnimate.current) {\r\n        character.animate();\r\n        shouldAnimate.current = false;\r\n      }\r\n\r\n      resizeCanvasToDisplaySize();\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    init();\r\n    createLight();\r\n    createCharacter();\r\n    animate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref, character]);\r\n\r\n  return mediaQuery ? <StyledDiv ref={ref} id=\"character\"></StyledDiv> : null;\r\n};\r\n","import { Email } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  text-transform: none;\r\n  margin: 3vh auto;\r\n`;\r\n\r\nconst StyledEmailIcon = styled(Email)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nexport const CTAButton = ({ children, className, onClick }: IProps) => {\r\n  return (\r\n    <StyledButton onClick={onClick} className={className} variant=\"contained\" startIcon={<StyledEmailIcon />}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import { Grow, lighten, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\nimport { introductionDelay, typewriterDeleteDelay, typewriterInitialDelay } from \"../../utils/constants\";\r\nimport { Character } from \"../Character/Character\";\r\nimport { CTAButton } from \"../util-components/CTAButton\";\r\nimport { StyledLink } from \"../util-components/StyledLink\";\r\nimport \"./Introduction.css\";\r\n\r\ntype TypographyProps = {\r\n  component: React.ElementType;\r\n};\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  /** 50px navbar and 2*5vh margin */\r\n  min-height: calc(100vh - 50px - 10vh);\r\n  margin: 5vh auto;\r\n\r\n  @media (max-width: ${breakpoints.md}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  margin: 7vh 0 0 7.5vw;\r\n\r\n  @media screen and (max-width: ${breakpoints.md}) {\r\n    margin: 7vh 0.5rem 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledBeforeTypwriter = styled(Typography)<TypographyProps>`\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.4)};\r\n  font-size: 1rem;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nconst StyledSubtitle = styled(Typography)`\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.8)};\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst StyledText = styled(Typography)`\r\n  font-size: 1.1rem;\r\n  margin-top: 10vh;\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.8)};\r\n  width: 75%;\r\n\r\n  @media screen and (max-width: ${breakpoints.md}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledCTAButton = styled(CTAButton)`\r\n  margin: 6vh 0 3vh 0;\r\n  padding: 1vh 2vw;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Introduction = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    navigate(\"contact\", { replace: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsMounted(true), introductionDelay);\r\n    //const timeout = setTimeout(() => setIsMounted(true), 0);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <Grow in={isMounted} timeout={400}>\r\n      <Grid>\r\n        <TextWrapper>\r\n          <StyledBeforeTypwriter variant=\"h6\" component={\"p\"}>\r\n            {t(\"introduction.hi\")}{\" \"}\r\n          </StyledBeforeTypwriter>\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter\r\n                .pauseFor(typewriterInitialDelay)\r\n                .typeString(t(\"introduction.name\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.student\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.jobdescription\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.name\"))\r\n                .start();\r\n            }}\r\n          />\r\n          <StyledSubtitle>{t(\"introduction.subtitle\")}</StyledSubtitle>\r\n          <StyledText>\r\n            {t(\"introduction.info.firstText\")}{\" \"}\r\n            <StyledLink url=\"https://www.htwk-leipzig.de/startseite/\">{t(\"introduction.info.htwkLink\")}</StyledLink>{\" \"}\r\n            {t(\"introduction.info.secondText\")}{\" \"}\r\n            <StyledLink url=\"https://www.ipoque.com/\">{t(\"introduction.info.jobLink\")}</StyledLink>.\r\n          </StyledText>\r\n          <StyledCTAButton onClick={handleClick}>Contact me!</StyledCTAButton>\r\n        </TextWrapper>\r\n        <Character />\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Projects = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <StyledSection id=\"projects\">\r\n      <SectionHeadline>{t(\"sections.projects\")}</SectionHeadline>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport About from \"../About/About\";\r\nimport Chatbot from \"../Chatbot/Chatbot\";\r\nimport Experience from \"../Experience/Experience\";\r\nimport { Footer } from \"../Footer/Footer\";\r\nimport { Introduction } from \"../Introduction/Introduction\";\r\nimport Projects from \"../Projects/Projects\";\r\n\r\nexport const Portfolio = () => {\r\n  return (\r\n    <>\r\n      <Introduction />\r\n      <About />\r\n      <Experience />\r\n      <Projects />\r\n      <Chatbot />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport { Header } from \"./Header\";\r\nimport AnimatedLogo from \"../Logo/AnimatedLogo\";\r\nimport styled from \"styled-components\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport { Portfolio } from \"./Portfolio\";\r\n\r\nconst StyledLogoWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: ${(props) => props.theme.colors.mainblack};\r\n`;\r\n\r\nconst StyledAnimatedLogo = styled(AnimatedLogo)`\r\n  width: 30vw;\r\n  height: 30vh;\r\n`;\r\n\r\nconst StyledContentWrapper = styled.div`\r\n  background-color: ${(props) => props.theme.colors.mainblack};\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nfunction App() {\r\n  const [isInAnimation, setIsInAnimation] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const handleHomeClick = () => {\r\n    setIsInAnimation(true);\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      setIsInAnimation(false);\r\n    }, 2800);\r\n    return () => clearTimeout(id);\r\n  }, [isInAnimation]);\r\n\r\n  return isInAnimation ? (\r\n    <StyledLogoWrapper>\r\n      <StyledAnimatedLogo />\r\n    </StyledLogoWrapper>\r\n  ) : (\r\n    <StyledContentWrapper>\r\n      <Header homeClickHandler={handleHomeClick} />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Portfolio />} />\r\n        <Route path=\"/contact\" element={<Contact />} />\r\n        <Route path=\"*\" element={<Portfolio />} />\r\n      </Routes>\r\n    </StyledContentWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport \"./AnimatedLogo.css\";\n\ninterface IProps {\n  className?: string;\n}\n\nexport default function AnimatedLogo({ className }: IProps) {\n  return (\n    <svg\n      id=\"e76RbDrnTZM1\"\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 226.304018 200.378\"\n      shapeRendering=\"geometricPrecision\"\n      textRendering=\"geometricPrecision\"\n    >\n      <path\n        id=\"e76RbDrnTZM2\"\n        d=\"M75.000003,20.999997L75.000003,43.003079L152.325119,43.003079L152.325119,20.999997L75.000003,20.999997Z\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-animated-elem-1\"\n      ></path>\n      <path\n        id=\"e76RbDrnTZM3\"\n        d=\"M75.000003,72.550075L75.000003,156.999998L97.841297,156.999997L97.841297,94.972261L152.325119,94.97226L152.325119,72.550072L75.000003,72.550075Z\"\n        transform=\"matrix(1 0 0 1 0 0.000003)\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-animated-elem-2\"\n      ></path>\n    </svg>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@mui/material/styles\";\n\nexport const muiTheme = createTheme({\n  typography: {\n    fontFamily: [\n      \"Fira Code\",\n      \"Roboto\",\n      '\"Oxygen\"',\n      '\"Ubuntu\"',\n      '\"Cantarell\"',\n      '\"Fira Sans\"',\n      '\"Droid Sans\"',\n      '\"Helvetica Neue\"',\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    primary: {\n      main: \"#cc0e00\",\n    },\n  },\n});\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translation_en from \"./locales/en/translation.json\";\r\nimport translation_de from \"./locales/de/translation.json\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them,\r\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\r\nconst resources = {\r\n  en: {\r\n    translation: translation_en,\r\n  },\r\n  de: {\r\n    translation: translation_de,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { StyledEngineProvider, ThemeProvider as MUIThemeProvider } from \"@mui/material/styles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./styles/styledComponentsTheme\";\r\nimport { muiTheme } from \"./styles/muiTheme\";\r\nimport { GlobalStyle } from \"./styles/globalStyles\";\r\n\r\nimport \"./i18n/i18n\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <StyledEngineProvider injectFirst>\r\n        <MUIThemeProvider theme={muiTheme}>\r\n          <ThemeProvider theme={theme}>\r\n            <GlobalStyle />\r\n              <App />\r\n          </ThemeProvider>\r\n        </MUIThemeProvider>\r\n      </StyledEngineProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","interface ITheme {\n  colors: IColor;\n}\n\ninterface IColor {\n  mainblack: string;\n  mainwhite: string;\n  mainred: string;\n  whitefontcolor: string;\n}\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme extends ITheme {}\n}\n\nexport const theme: ITheme = {\n  colors: {\n    mainblack: \"#181114\",\n    mainwhite: \"#fbfffe\",\n    mainred: \"#cc0e00\",\n    whitefontcolor: \"#fbfffe\",\n  },\n};\n"],"sourceRoot":""}