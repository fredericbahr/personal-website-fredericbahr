{"version":3,"sources":["components/util-components/SectionHeadline.tsx","components/About/About.tsx","components/Experience/TabPanel.tsx","components/Experience/components/TimeRange.tsx","components/Experience/components/WorkingTitle.tsx","components/Experience/workplaces/GDMcomWorkingStudent.tsx","components/Experience/workplaces/IpoqueBachelor.tsx","components/Experience/workplaces/IpoqueIntern.tsx","components/Experience/workplaces/IpoqueWorkingStudent.tsx","components/Experience/Experience.tsx","components/Projects/Projects.tsx","components/Contact/Contact.tsx","styles/globalStyles.ts","assets/img/chatbot-avatar.svg","components/Chatbot/Chat/ChatHeader.tsx","components/Chatbot/Chat/ChatText.tsx","utils/hooks/useElementDimension.ts","assets/img/pdf-file.svg","components/Chatbot/Chat/ChatDownload.tsx","components/Chatbot/Chat/ChatAction.tsx","assets/pdf/lebenslauf.pdf","data/chatMessages.ts","components/Chatbot/Chat/ChatFormMessage.tsx","components/Chatbot/Chat/ChatMessages.tsx","utils/typePredicates.ts","components/Chatbot/Chat/Chat.tsx","components/Chatbot/FAB.tsx","components/Chatbot/Chatbot.tsx","components/Logo/Logo.tsx","utils/constants.ts","components/LanguageSwitcher/LanguageMenu.tsx","components/LanguageSwitcher/LanguageSwitcher.tsx","data/navLinks.ts","components/Navbar/MenuNavbar.tsx","components/Navbar/SideBySideNavbar.tsx","components/Navbar/Navbar.tsx","components/App/Header.tsx","components/Character/characterUtils.ts","components/Character/units.ts","components/Character/miniMe.ts","components/Character/Character.tsx","components/util-components/CTAButton.tsx","components/util-components/StyledLink.tsx","components/Introduction/Introduction.tsx","components/App/App.tsx","components/Logo/AnimatedLogo.tsx","reportWebVitals.ts","styles/muiTheme.ts","i18n/i18n.ts","index.tsx","styles/styledComponentsTheme.ts"],"names":["StyledHeadline","styled","h2","props","theme","colors","mainred","SectionHeadline","children","StyledSection","section","About","id","StyledWrapper","div","TabPanel","value","index","role","hidden","Box","Typography","TimeRange","Wrapper","Title","At","Company","a","WorkingTitle","title","companyName","url","href","GDMcomWorkingStudent","IpoqueBachelor","IpoqueIntern","IpoqueWorkingStudent","TabWrapper","StyledTabs","Tabs","StyledTab","Tab","mainwhite","Experience","React","useState","setValue","t","useTranslation","orientation","variant","onChange","event","newValue","label","Projects","Contact","breakpoints","GlobalStyle","createGlobalStyle","whitefontcolor","StyledCardHeader","CardHeader","mainblack","StyledClose","Close","StyledTypography","StyledIconButton","IconButton","ChatHeader","clickHandler","avatar","Avatar","alt","src","ChatbotAvatar","sx","fontSize","display","subheader","action","onClick","StyledMessageWrapper","owner","StyledMessage","p","ChatText","Fade","in","appear","getElementDimension","element","width","offsetWidth","height","offsetHeight","StyledCard","Card","StyledCardContent","CardContent","StyledPage","Page","StyledCardActions","CardActions","StyledImg","img","ChatDownload","type","fileName","ref","useRef","size","elementDimensions","setElementDimensions","useEffect","handleResize","window","addEventListener","removeEventListener","useElementDimensions","current","handleDownload","link","document","createElement","body","appendChild","download","toString","click","removeChild","CardActionArea","file","renderMode","pageNumber","loading","CircularProgress","pdfFileIcon","StyledButton","Button","ChatAction","handleAction","color","initialMessages","message","sayHello","actionText","messges","furtherActions","showCV","Lebenslauf","directChatFormElements","name","required","sendAnotherMessage","formElements","formSubmitID","directChat","actionRepository","Map","set","initialActions","StyledDialog","Dialog","StyledTitleWrapper","darken","StyledDialogTitle","DialogTitle","StyledDialogContent","DialogContent","StyledDialogContentText","DialogContentText","StyledForm","form","StyledTextField","TextField","alpha","StyledDialogActions","DialogActions","Transition","forwardRef","Slide","direction","renderFormElements","map","formElement","idx","autoFocus","multiline","minRows","ChatFormMessage","isDialogOpen","setIsDialogOpen","timeout","setTimeout","clearTimeout","open","onClose","TransitionComponent","gutterBottom","component","method","style","StyledDiv","ChatMessages","messages","setTextMessages","actions","setActions","messagesEndRef","scrollToBottom","getFurtherActionMessages","furtherActionsArray","forEach","chatAction","get","push","handleChatAction","actionMessage","delayedMessages","Promise","resolve","textMessages","all","scrollIntoView","behavior","undefined","isChatTextMessage","isChatDownload","isChatForm","Chat","StyledFab","Fab","lighten","FAB","Grow","Tooltip","ChatBubbleOutline","Chatbot","isOpen","setIsOpen","Logo","className","xmlns","xmlnsXlink","viewBox","shapeRendering","textRendering","d","fill","stroke","strokeWidth","transform","transition","navbarItemBaseDelay","typewriterDeleteDelay","LanguageMenu","anchorElement","handleClose","i18n","handleClick","language","changeLanguage","anchorEl","MenuItem","StyledTranslate","Translate","LanguageSwitcher","setAnchorElement","Boolean","currentTarget","navLinks","StyledNav","nav","StyledOl","ol","StyledLi","li","StyledMenuIcon","MenuIcon","StyledCloseIcon","CloseIcon","StyledSwipeableDrawer","SwipeableDrawer","DrawerWrapper","Puller","StyledListItemButton","ListItemButton","StyledNavHashLink","NavHashLink","MenuNavbar","isMounted","setOpen","toggleDrawer","newOpen","MenuIconButton","anchor","onOpen","swipeAreaWidth","disableSwipeToOpen","List","ListItem","smooth","to","SideBySideNavbar","length","Navbar","setIsMounted","mediaQuery","useMediaQuery","StyledAppBar","AppBar","StyledLogo","Header","homeClickHandler","trigger","useScrollTrigger","target","threshold","staticPosition","position","Toolbar","mergeMeshes","group","material","geometries","obj","isMesh","geometry","clone","updateMatrix","applyMatrix4","matrix","THREE","mergeBufferGeometries","headSize","headPositionY","mainHairSizeX","mainHairSizeY","mainHairSizeZ","bodySizeZ","legSizeX","bodySizeX","legSizeZ","legPositionY","anklePositonY","MiniMe","character","skinMat","eyeMat","retinaMat","eyeBrownMat","oralCavityMat","tongueMat","teethMat","glassMat","earMat","shirtMat","beltMat","buckleMat","legMat","legSeperatorMat","footMat","hairMat","buttonMat","deg2rad","degrees","Math","PI","createHead","headGeometry","head","createEyesAndEyebrowns","eyes","eyeBrowns","mouth","createMouth","createGlassesAndEars","glasses","ears","add","eyeGeometry","createEyes","createEyeBrowns","leftEye","parameters","depth","rightEye","createRetinas","leftRetina","rightRetina","retinaGeometry","eyeBrownGeometry","leftEyeBrown","rotateZ","rightEyeBrown","oralCavityGeometry","teethGeometry","tongueGeometry","oralCavity","side","teeth","tongue","glassGeometry","createGlasses","createEars","middleConnectorGeometry","outerConnectorGeometry","sideConnectorGeometry","leftGlass","rightGlass","middleConnector","outerRadius","leftOuterConnector","x","innerRadius","rightOuterConnector","leftSideConnector","rotateY","rightSideConnector","earGeometry","leftEar","rightEar","createHairs","mainHair","detailHairs","hair","basicHairs","baiscHairGeometry","createTopHair","createBackHair","createSideHair","createDetailHairs","maxTopHair","i","hairPositionX","maxBackHair","backHairGeometry","hairPositionY","rotateX","maxSideHair","isLeftSide","sideMultiplier","hairPositionZ","hairGeometry","createFrontHairParting","createFrontHairRightSideDetails","createBackHairDetails","half","floor","sameStartSameEndIdx","factor","getFactorForBackHairDetails","createBody","corpusGeometry","corpus","createArms","leftArm","rightArm","buttons","createButtons","button","createButton","buttonGeometry","buttonPositionY","buttonPositionYOffset","upperArmGeometry","lowerArmGeometry","thumbGeometry","fingerGeometry","createArm","isLeftArm","arm","hand","sideModificator","createArmMeshes","upperArm","lowerArm","thumb","fingers","y","createBelt","beltGeometry","buckleGeometry","belt","buckle","z","createLegs","legs","legGeometry","legSeperatorGeometry","legSizeY","leftLeg","rightLeg","legSeperator","createFeet","feet","ankleGeometry","footGeometry","leftAnkle","rightAnkle","leftFoot","rightFoot","translateY","scale","draw","animate","console","log","this","colorIndex","Character","shouldAnimate","scene","camera","innerWidth","innerHeight","lookAt","axesHelper","renderer","antialias","setPixelRatio","devicePixelRatio","controls","OrbitControls","domElement","update","replaceChildren","hemiLight","ambientLight","createLight","requestAnimationFrame","canvas","clientWidth","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","render","StyledEmailIcon","Email","Link","StyledLink","Grid","TextWrapper","StyledBeforeTypwriter","StyledSubtitle","StyledText","StyledCTAButton","startIcon","Introduction","navigate","useNavigate","onInit","typewriter","pauseFor","introductionDelay","typeString","deleteAll","start","replace","StyledLogoWrapper","StyledAnimatedLogo","StyledContentWrapper","App","isInAnimation","setIsInAnimation","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","muiTheme","createTheme","typography","fontFamily","join","palette","primary","main","resources","en","translation","de","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ReactDOM","StrictMode","StyledEngineProvider","injectFirst","getElementById"],"mappings":"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","file":"static/js/main.ed10f386.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst StyledHeadline = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 5vh;\r\n  width: 100%;\r\n\r\n  &:before {\r\n    counter-increment: section;\r\n    content: \"0\" counter(section) \".\";\r\n    color: ${(props) => props.theme.colors.mainred};\r\n    font-size: 1.3rem;\r\n    margin-right: 15px;\r\n    font-family: \"Fira Code\";\r\n  }\r\n`;\r\n\r\nexport const SectionHeadline = ({ children }: IProps) => {\r\n  return <StyledHeadline>{children}</StyledHeadline>;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default function About() {\r\n  return (\r\n    <StyledSection id=\"about\">\r\n      <SectionHeadline>About</SectionHeadline>\r\n    </StyledSection>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProbs {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nconst StyledWrapper = styled.div`\r\n    flex-grow: 1;\r\n`\r\n\r\nexport const TabPanel = ({ children, value, index }: IProbs) => {\r\n  return (\r\n    <StyledWrapper role=\"tabpanel\" hidden={value !== index}>\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const TimeRange = () => {\r\n  return <div></div>;\r\n};\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  companyName: string;\r\n  url: string;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = styled(Typography)``;\r\n\r\nconst At = styled(Typography)``;\r\n\r\nconst Company = styled.a``;\r\n\r\nexport const WorkingTitle = ({ title, companyName, url }: IProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{title}</Title>\r\n      <At>@</At>\r\n      <Company href={url}>{companyName}</Company>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TimeRange } from \"../components/TimeRange\";\r\nimport { WorkingTitle } from \"../components/WorkingTitle\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const GDMcomWorkingStudent = () => {\r\n  return (\r\n    <Wrapper>\r\n      <WorkingTitle title={\"\"} companyName=\"GDMcom GmbH\" url=\"https://gdmcom.de/\" />\r\n      <TimeRange />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const IpoqueBachelor = () => {\r\n  return <div></div>;\r\n};\r\n","import React from 'react';\r\n\r\nexport const IpoqueIntern = () => {\r\n  return <div></div>;\r\n};\r\n","import React from 'react';\r\n\r\nexport const IpoqueWorkingStudent = () => {\r\n  return <div></div>;\r\n};\r\n","import { Tab, Tabs, Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport styled from \"styled-components\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\nimport { TabPanel } from \"./TabPanel\";\r\nimport { GDMcomWorkingStudent } from \"./workplaces/GDMcomWorkingStudent\";\r\nimport { IpoqueBachelor } from \"./workplaces/IpoqueBachelor\";\r\nimport { IpoqueIntern } from \"./workplaces/IpoqueIntern\";\r\nimport { IpoqueWorkingStudent } from \"./workplaces/IpoqueWorkingStudent\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TabWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledTab = styled(Tab)`\r\n  font-size: 1.1rem;\r\n  text-transform: none;\r\n  font-weight: 400;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst Experience = () => {\r\n  const [value, setValue] = React.useState(0);\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <StyledSection id=\"experience\">\r\n      <SectionHeadline>{t(\"experience.headline\")}</SectionHeadline>\r\n      <TabWrapper>\r\n        <TabPanel value={value} index={0}>\r\n          <IpoqueWorkingStudent />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <IpoqueBachelor />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <IpoqueIntern />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          <GDMcomWorkingStudent />\r\n        </TabPanel>\r\n        <StyledTabs orientation=\"vertical\" variant=\"scrollable\" onChange={handleChange} value={value}>\r\n          <StyledTab label={t(\"experience.work4.name\")}></StyledTab>\r\n          <StyledTab label={t(\"experience.work3.name\")}></StyledTab>\r\n          <StyledTab label={t(\"experience.work2.name\")}></StyledTab>\r\n          <StyledTab label={t(\"experience.work1.name\")}></StyledTab>\r\n        </StyledTabs>\r\n      </TabWrapper>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SectionHeadline } from \"../util-components/SectionHeadline\";\r\n\r\nconst StyledSection = styled.section`\r\n  width: 85%;\r\n  height: 100vh;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <StyledSection id=\"projects\">\r\n      <SectionHeadline>Projects</SectionHeadline>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  /** 50px navbar and 2*5px padding */\r\n  min-height: calc(100vh - 50px - 14px);\r\n`;\r\n\r\nexport default function Contact() {\r\n  return <Wrapper>hi</Wrapper>;\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const breakpoints = {\r\n  xl: \"1536px\",\r\n  lg: \"1200px\",\r\n  md: \"900px\",\r\n  sm: \"600px\",\r\n  xs: \"0px\",\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  font-size: 20px;\r\n\r\n  @media screen and (min-width: ${breakpoints.lg}) and (max-width: ${breakpoints.xl}) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: ${breakpoints.lg}){\r\n    font-size: 14px;\r\n  }\r\n\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: \"Fira Code\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  overflow-x: hidden;\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n  counter-reset: section 0;\r\n}\r\n\r\ncode {\r\n  font-family: \"Courier New\",\r\n    monospace;\r\n}\r\n\r\n\r\ncanvas { width: 100%; height: 100%; display: block;}\r\n\r\n  /* ===== Scrollbar CSS ===== */\r\n/* Firefox */\r\n* {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #cc0e00 #181114;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n/* Chrome, Edge, and Safari */\r\n*::-webkit-scrollbar {\r\n  width: 9px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n  background: #181114;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: #cc0e00;\r\n  border-radius: 0px;\r\n  border: 0px none #cc0e00;\r\n}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/chatbot-avatar.f2646d1a.svg\";","import { Close } from \"@mui/icons-material\";\nimport { Avatar, CardHeader, IconButton, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport ChatbotAvatar from \"../../../assets/img/chatbot-avatar.svg\";\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst StyledCardHeader = styled(CardHeader)`\n  background-color: ${(props) => props.theme.colors.mainblack};\n  color: ${(props) => props.theme.colors.mainwhite};\n\n  .MuiCardHeader-action {\n    align-self: center;\n  }\n`;\n\nconst StyledClose = styled(Close)`\n  color: ${(props) => props.theme.colors.mainwhite};\n`;\n\nconst StyledTypography = styled(Typography)`\n  color: ${(props) => props.theme.colors.mainwhite};\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  &:hover {\n    background-color: #363636;\n  }\n`;\n\nconst ChatHeader = ({ clickHandler }: IProps) => {\n  return (\n    <StyledCardHeader\n      avatar={<Avatar alt=\"Chatbo\" src={ChatbotAvatar} variant=\"square\" />}\n      title={\n        <StyledTypography sx={{ fontSize: 24 }} variant=\"caption\" display=\"block\">\n          Chatbot\n        </StyledTypography>\n      }\n      subheader={\n        <StyledTypography variant=\"caption\" display=\"block\">\n          Ask me a question!\n        </StyledTypography>\n      }\n      action={\n        <StyledIconButton onClick={clickHandler}>\n          <StyledClose />\n        </StyledIconButton>\n      }\n    />\n  );\n};\n\nexport default ChatHeader;\n","import { Fade } from \"@mui/material\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: ReactNode;\r\n  owner: \"bot\" | \"customer\";\r\n}\r\n\r\nconst StyledMessageWrapper = styled.div<IProps>`\r\n  display: flex;\r\n  justify-content: ${(props) => (props.owner === \"bot\" ? \"start\" : \"end\")};\r\n`;\r\n\r\nconst StyledMessage = styled.p<IProps>`\r\n  box-sizing: border-box;\r\n  padding: 0.5rem 1rem;\r\n  margin: 0.5rem 0;\r\n  font-size: 0.8rem;\r\n  background: ${(props) => (props.owner === \"bot\" ? \"rgba(70, 77, 66, 0.15)\" : \"black\")};\r\n  color: ${(props) => (props.owner === \"bot\" ? \"black\" : \"white\")};\r\n  border-radius: ${(props) =>\r\n    props.owner === \"bot\" ? \"1.125rem 1.125rem 1.125rem 0\" : \"1.125rem 1.125rem 0 1.125rem\"};\r\n  min-height: 2.25rem;\r\n  width: fit-content;\r\n  max-width: 80%;\r\n  box-shadow: 0 0 2rem rgba(black, 0.075), 0rem 1rem 1rem -1rem rgba(black, 0.1);\r\n  word-wrap: break-word;\r\n  hyphens: auto;\r\n`;\r\n\r\nconst ChatText = ({ children, owner }: IProps) => {\r\n  return (\r\n    <Fade in appear>\r\n      <StyledMessageWrapper owner={owner}>\r\n        <StyledMessage owner={owner}>{children}</StyledMessage>\r\n      </StyledMessageWrapper>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default ChatText;\r\n","import { useState, useEffect } from \"react\";\n\nfunction getElementDimension(element: HTMLElement | null) {\n  if (element) {\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    return {\n      width,\n      height,\n    };\n  }\n\n  return {\n    width: 0,\n    height: 0,\n  };\n}\n\nexport default function useElementDimensions(element: HTMLElement | null) {\n  const [elementDimensions, setElementDimensions] = useState(getElementDimension(element));\n\n  useEffect(() => {\n    setElementDimensions(getElementDimension(element));\n\n    function handleResize() {\n      setElementDimensions(getElementDimension(element));\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [element]);\n\n  return elementDimensions;\n}\n","export default __webpack_public_path__ + \"static/media/pdf-file.e6c7f385.svg\";","import React, { useRef } from \"react\";\r\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack\";\r\nimport styled from \"styled-components\";\r\nimport useElementDimensions from \"../../../utils/hooks/useElementDimension\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport pdfFileIcon from \"../../../assets/img/pdf-file.svg\";\r\nimport ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\r\nimport { IChatDownload } from \"../interface\";\r\n\r\nconst StyledCard = styled(Card)`\r\n  margin: 0.5rem 0;\r\n  max-width: 80%;\r\n  background-color: rgba(70, 77, 66, 0.15);\r\n  border-radius: 1.125rem 1.125rem 1.125rem 0;\r\n`;\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n  padding: 0.8rem 0.8rem 0 0.8rem;\r\n`;\r\n\r\nconst StyledPage = styled(Page)`\r\n  & > div {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst StyledCardActions = styled(CardActions)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nexport const ChatDownload = ({ type, url, fileName }: IChatDownload) => {\r\n  const ref = useRef(null);\r\n  const size = useElementDimensions(ref.current);\r\n\r\n  /**\r\n   * Creates an anchor element and sets the download and href\r\n   * Immediatly clicks it and then removes the element again\r\n   */\r\n  const handleDownload = () => {\r\n    const link: HTMLAnchorElement = document.createElement(\"a\");\r\n    document.body.appendChild(link);\r\n    link.download = fileName.toString();\r\n    link.href = url.toString();\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const renderPDFDownlaod = () => {\r\n    return (\r\n      <StyledCard ref={ref}>\r\n        <CardActionArea onClick={() => handleDownload()}>\r\n          <StyledCardContent>\r\n            <Document file={url} renderMode=\"svg\">\r\n              <StyledPage pageNumber={1} height={size.width} loading={<CircularProgress />} />\r\n            </Document>\r\n          </StyledCardContent>\r\n        </CardActionArea>\r\n        <StyledCardActions>\r\n          <StyledImg src={pdfFileIcon} />\r\n          <StyledTypography>{fileName}.pdf</StyledTypography>\r\n          <IconButton onClick={() => handleDownload()}>\r\n            <ArrowCircleDownIcon />\r\n          </IconButton>\r\n        </StyledCardActions>\r\n      </StyledCard>\r\n    );\r\n  };\r\n\r\n  return <>{type === \"pdf\" ? renderPDFDownlaod() : \"\"}</>;\r\n};\r\n","import { Button } from \"@mui/material\";\r\nimport React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  children: ReactNode;\r\n  handleAction: () => void;\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 5px 0 5px 10px;\r\n  font-size: 0.8rem;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.mainblack};\r\n    color: ${(props) => props.theme.colors.mainwhite};\r\n  }\r\n`;\r\n\r\nconst ChatAction = ({ children, handleAction }: IProps) => {\r\n  return (\r\n    <StyledButton color=\"inherit\" variant=\"outlined\" onClick={handleAction}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default ChatAction;\r\n","export default __webpack_public_path__ + \"static/media/lebenslauf.c1e35f68.pdf\";","import { IChatTextMessage, IChatAction, IChatFormElement } from \"../components/Chatbot/interface\";\r\nimport Lebenslauf from \"../assets/pdf/lebenslauf.pdf\";\r\n\r\nexport const initialMessages: IChatTextMessage[] = [\r\n  { message: \"chatbot.initialMessage.firstMessage\", owner: \"bot\" },\r\n  { message: \"chatbot.initialMessage.secondMessage\", owner: \"bot\" },\r\n];\r\n\r\nconst sayHello: IChatAction = {\r\n  actionText: \"chatbot.sayHello.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.sayHello.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.sayHello.secondMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.thirdMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.fourthMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.sayHello.fifthMessage\", owner: \"bot\" },\r\n  ],\r\n  furtherActions: [\"showCV\", \"directChat\"],\r\n};\r\n\r\nconst showCV: IChatAction = {\r\n  actionText: \"chatbot.showCV.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.showCV.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.showCV.secondMessage\", owner: \"bot\" },\r\n    { message: \"chatbot.showCV.thirdMessage\", owner: \"bot\" },\r\n    { type: \"pdf\", owner: \"bot\", url: Lebenslauf, fileName: \"cv_fredericbahr\" },\r\n  ],\r\n  furtherActions: [\"sayHello\", \"directChat\"],\r\n};\r\n\r\nconst directChatFormElements: IChatFormElement[] = [\r\n  {\r\n    name: \"name\",\r\n    label: \"chatbot.formElementsLabel.name\",\r\n    required: true,\r\n    type: \"text\",\r\n  },\r\n  {\r\n    name: \"subject\",\r\n    label: \"chatbot.formElementsLabel.subject\",\r\n    required: true,\r\n    type: \"text\",\r\n  },\r\n  {\r\n    name: \"email\",\r\n    label: \"chatbot.formElementsLabel.email\",\r\n    required: true,\r\n    type: \"email\",\r\n  },\r\n  {\r\n    name: \"message\",\r\n    label: \"chatbot.formElementsLabel.message\",\r\n    required: true,\r\n    type: \"textarea\",\r\n  },\r\n];\r\n\r\nconst sendAnotherMessage: IChatAction = {\r\n  actionText: \"chatbot.sendAnotherMessage.actionText\",\r\n  messges: [\r\n    { message: \"chatbot.sendAnotherMessage.firstMessage\", owner: \"customer\" },\r\n    { message: \"chatbot.sendAnotherMessage.secondMessage\", owner: \"bot\" },\r\n    {\r\n      formElements: directChatFormElements,\r\n      formSubmitID: \"46ac44df0ea8d59a83d300a64c763539\",\r\n    },\r\n  ],\r\n  furtherActions: [\"sendAnotherMessage\", \"sayHello\", \"showCV\"],\r\n};\r\n\r\nconst directChat: IChatAction = {\r\n  actionText: \"chatbot.directChat.actionText\",\r\n  messges: [\r\n    {\r\n      message: \"chatbot.directChat.firstMessage\",\r\n      owner: \"customer\",\r\n    },\r\n    { message: \"chatbot.directChat.secondMessage\", owner: \"bot\" },\r\n    {\r\n      message: \"chatbot.directChat.thirdMessage\",\r\n      owner: \"bot\",\r\n    },\r\n    {\r\n      formElements: directChatFormElements,\r\n      formSubmitID: \"46ac44df0ea8d59a83d300a64c763539\",\r\n    },\r\n  ],\r\n  furtherActions: [\"sendAnotherMessage\", \"sayHello\", \"showCV\"],\r\n};\r\n\r\nexport const actionRepository: Map<String, IChatAction> = new Map<String, IChatAction>();\r\n\r\nactionRepository.set(\"sayHello\", sayHello);\r\nactionRepository.set(\"showCV\", showCV);\r\nactionRepository.set(\"directChat\", directChat);\r\nactionRepository.set(\"sendAnotherMessage\", sendAnotherMessage);\r\n\r\nexport const initialActions: IChatAction[] = [sayHello, showCV, directChat];\r\n","import {\r\n  alpha,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { TFunction, useTranslation } from \"react-i18next\";\r\nimport { IChatFormElement, IChatForm } from \"../interface\";\r\nimport { lighten, darken } from \"@mui/system\";\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  & .MuiPaper-root {\r\n    background-color: ${(props) => props.theme.colors.mainblack};\r\n    color: ${(props) => props.theme.colors.whitefontcolor};\r\n  }\r\n`;\r\n\r\nconst StyledTitleWrapper = styled.div`\r\n  margin-right: 40px;\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  &:hover {\r\n    background-color: ${(props) => darken(props.theme.colors.mainblack, 0.3)};\r\n  }\r\n`;\r\n\r\nconst StyledDialogTitle = styled(DialogTitle)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid;\r\n  border-bottom-color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledClose = styled(Close)`\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledDialogContentText = styled(DialogContentText)`\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  margin: 10px 0;\r\n\r\n  & label {\r\n    color: ${(props) => props.theme.colors.whitefontcolor};\r\n  }\r\n\r\n  & label.Mui-focused {\r\n    color: #fbfffe;\r\n  }\r\n\r\n  & .MuiOutlinedInput-root {\r\n    color: #fbfffe;\r\n\r\n    & fieldset {\r\n      border-color: ${alpha(\"#fbfffe\", 0.5)};\r\n    }\r\n\r\n    &:hover fieldset {\r\n      border-color: #fbfffe;\r\n    }\r\n\r\n    &.Mui-focused fieldset {\r\n      border-color: #fbfffe;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDialogActions = styled(DialogActions)`\r\n  padding: 8px 24px;\r\n`;\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst renderFormElements = (formElements: IChatFormElement[], t: TFunction<\"translation\", undefined>) => {\r\n  return formElements.map((formElement: IChatFormElement, idx: number) => {\r\n    const renderedFormElement =\r\n      formElement.type === \"textarea\" ? (\r\n        <StyledTextField\r\n          autoFocus={idx === 0}\r\n          multiline\r\n          minRows={3}\r\n          size=\"small\"\r\n          name={formElement.name.toString()}\r\n          required={formElement.required}\r\n          label={t(formElement.label as any)}\r\n        />\r\n      ) : (\r\n        <StyledTextField\r\n          autoFocus={idx === 0}\r\n          type={formElement.type}\r\n          name={formElement.name.toString()}\r\n          required={formElement.required}\r\n          label={t(formElement.label as any)}\r\n          size=\"small\"\r\n        />\r\n      );\r\n    return renderedFormElement;\r\n  });\r\n};\r\n\r\nexport const ChatFormMessage = ({ formElements, formSubmitID }: IChatForm) => {\r\n  const { t } = useTranslation();\r\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsDialogOpen(true), 1200);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledDialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)} TransitionComponent={Transition}>\r\n      <StyledDialogTitle>\r\n        <StyledTitleWrapper>\r\n          <Typography gutterBottom component=\"p\">\r\n            Message me\r\n          </Typography>\r\n          <Typography variant=\"caption\" component=\"p\">\r\n            I will get back to you as soon as possible.\r\n          </Typography>\r\n        </StyledTitleWrapper>\r\n        <StyledIconButton onClick={() => setIsDialogOpen(false)}>\r\n          <StyledClose />\r\n        </StyledIconButton>\r\n      </StyledDialogTitle>\r\n      <StyledDialogContent>\r\n        <StyledDialogContentText></StyledDialogContentText>\r\n        <StyledForm method=\"POST\" action={`https://formsubmit.co/${formSubmitID}`} id=\"contact-form\">\r\n          {renderFormElements(formElements, t)}\r\n          <input type=\"hidden\" name=\"_next\" value=\"https://fredericbahr.github.io\" />\r\n          <input type=\"hidden\" name=\"_captcha\" value=\"false\" />\r\n          <input type=\"text\" name=\"_honey\" style={{ display: \"none\" }} />\r\n          <input type=\"hidden\" name=\"_template\" value=\"table\"></input>\r\n        </StyledForm>\r\n      </StyledDialogContent>\r\n      <StyledDialogActions>\r\n        <Button onClick={() => setIsDialogOpen(false)}>Cancel</Button>\r\n        <Button type=\"submit\" form=\"contact-form\">\r\n          Send\r\n        </Button>\r\n      </StyledDialogActions>\r\n    </StyledDialog>\r\n  );\r\n};\r\n","import { CardActions, CardContent } from \"@mui/material\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatText from \"./ChatText\";\r\nimport { isChatDownload, isChatForm, isChatTextMessage } from \"../../../utils/typePredicates\";\r\nimport { ChatDownload } from \"./ChatDownload\";\r\nimport ChatAction from \"./ChatAction\";\r\nimport { initialActions, actionRepository, initialMessages } from \"../../../data/chatMessages\";\r\nimport { ChatFormMessage } from \"./ChatFormMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IChatMessage, IChatAction } from \"../interface\";\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledCardActions = styled(CardActions)`\r\n  flex-wrap: wrap;\r\n  margin-bottom: 1vmax;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  overflow-y: scroll;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatMessages = () => {\r\n  const { t } = useTranslation();\r\n  const [messages, setTextMessages] = useState<IChatMessage[]>(initialMessages);\r\n  const [actions, setActions] = useState<IChatAction[]>(initialActions);\r\n\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  /**\r\n   * Scroll to the bottom of messages if textMessages or actionMessages change\r\n   */\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, actions]);\r\n\r\n  /**\r\n   * renders the textMessages\r\n   * If it is a chat message the ChatText is rendered\r\n   * Else the ChatDownload is rendered\r\n   * @returns ChatText and ChatDowload Components\r\n   */\r\n  const renderMessages = () => {\r\n    return messages.map((message: IChatMessage, idx: number) => {\r\n      if (isChatTextMessage(message)) {\r\n        return (\r\n          <ChatText key={idx} owner={message.owner}>\r\n            {t(message.message as any)}\r\n          </ChatText>\r\n        );\r\n      }\r\n\r\n      if (isChatDownload(message)) {\r\n        return (\r\n          <ChatDownload\r\n            key={idx}\r\n            owner={message.owner}\r\n            type={message.type}\r\n            fileName={message.fileName}\r\n            url={message.url}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (isChatForm(message)) {\r\n        return <ChatFormMessage key={idx} formElements={message.formElements} formSubmitID={message.formSubmitID} />;\r\n      }\r\n\r\n      return null;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the further action messages from the initalActions Map\r\n   * @param furtherActions the key of the further action\r\n   * @return array of further actions\r\n   */\r\n  const getFurtherActionMessages = (furtherActions: String[]): IChatAction[] => {\r\n    const furtherActionsArray: IChatAction[] = [];\r\n    furtherActions.forEach((action: String) => {\r\n      const chatAction: IChatAction | undefined = actionRepository.get(action);\r\n      if (chatAction) {\r\n        furtherActionsArray.push(chatAction);\r\n      }\r\n    });\r\n    return furtherActionsArray;\r\n  };\r\n\r\n  /**\r\n   * Adds the messages of the actionMessage to the textMessages after a delay\r\n   * After all messages are set it sets the new actionMessages\r\n   * @param actionMessage the actionMessage clicked by the user\r\n   */\r\n  const handleChatAction = async (actionMessage: IChatAction) => {\r\n    const delay = 1000;\r\n\r\n    setActions([]);\r\n\r\n    const delayedMessages = actionMessage.messges.map((message, idx) => {\r\n      return new Promise<void>((resolve) => {\r\n        setTimeout(() => {\r\n          setTextMessages((textMessages) => [...textMessages, message]);\r\n          resolve();\r\n        }, idx * delay);\r\n      });\r\n    });\r\n\r\n    await Promise.all(delayedMessages);\r\n\r\n    setActions(actionMessage.furtherActions ? getFurtherActionMessages(actionMessage.furtherActions) : []);\r\n  };\r\n\r\n  /**\r\n   * Scrolls the the messagesEndRef\r\n   */\r\n  const scrollToBottom = () => {\r\n    messagesEndRef?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <StyledCardContent>{renderMessages()}</StyledCardContent>\r\n      <StyledCardActions>\r\n        {actions.map((actionMessage: IChatAction, idx: number) => (\r\n          <ChatAction key={idx} handleAction={() => handleChatAction(actionMessage)}>\r\n            {t(actionMessage.actionText as any)}\r\n          </ChatAction>\r\n        ))}\r\n      </StyledCardActions>\r\n      <div ref={messagesEndRef} />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;\r\n","import { IChatMessage, IChatTextMessage, IChatDownload, IChatForm } from \"../components/Chatbot/interface\";\n\n\nexport function isChatTextMessage(message: IChatMessage): message is IChatTextMessage {\n  return (message as IChatTextMessage).message !== undefined;\n}\n\nexport function isChatDownload(message: IChatMessage): message is IChatDownload {\n  return (message as IChatDownload).url !== undefined;\n}\n\nexport function isChatForm(message: IChatMessage): message is IChatForm {\n  return (message as IChatForm).formElements !== undefined;\n}\n","import { Card, Slide } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"../../../styles/globalStyles\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatMessages from \"./ChatMessages\";\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 1vmax;\n  right: 2vmax;\n  width: 25vw;\n  height: 75vh;\n\n  @media screen and (max-width: ${breakpoints.md}) {\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1200;\n  }\n`;\n\nconst Chat = ({ clickHandler }: IProps) => {\n  return (\n    <Slide direction=\"up\" in>\n      <StyledCard>\n        <ChatHeader clickHandler={clickHandler} />\n        <ChatMessages />\n      </StyledCard>\n    </Slide>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { Fab, Grow, Tooltip } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport { ChatBubbleOutline } from \"@mui/icons-material\";\nimport { lighten, darken } from \"@mui/system\";\nimport { useTranslation } from \"react-i18next\";\n\nconst StyledFab = styled(Fab)`\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.05)};\n  position: fixed;\n  bottom: 1vmax;\n  right: 2vmax;\n\n  &:hover {\n    background-color: ${(props) => darken(props.theme.colors.mainblack, 1)};\n  }\n`;\n\ninterface IProps {\n  clickHandler: () => void;\n}\n\nconst FAB = ({ clickHandler }: IProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Grow in>\n      <Tooltip title={t(\"chatbot.tooltip\") as string}>\n        <StyledFab onClick={clickHandler} color=\"primary\">\n          <ChatBubbleOutline />\n        </StyledFab>\n      </Tooltip>\n    </Grow>\n  );\n};\n\nexport default FAB;\n","import React, { useState } from \"react\";\nimport Chat from \"./Chat/Chat\";\nimport FAB from \"./FAB\";\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return isOpen ? <Chat clickHandler={() => setIsOpen(false)} /> : <FAB clickHandler={() => setIsOpen(true)} />;\n};\n\nexport default Chatbot;\n","import React from \"react\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst Logo = ({ className }: IProps) => {\n  return (\n    <svg\n      className={className}\n      id=\"e76RbDrnTZM1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 226.304018 200.378\"\n      shapeRendering=\"geometricPrecision\"\n      textRendering=\"geometricPrecision\"\n    >\n      <path\n        id=\"e76RbDrnTZM2\"\n        d=\"M75.000003,20.999997L75.000003,43.003079L152.325119,43.003079L152.325119,20.999997L75.000003,20.999997Z\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-elem-1\"\n      ></path>\n      <path\n        id=\"e76RbDrnTZM3\"\n        d=\"M75.000003,72.550075L75.000003,156.999998L97.841297,156.999997L97.841297,94.972261L152.325119,94.97226L152.325119,72.550072L75.000003,72.550075Z\"\n        transform=\"matrix(1 0 0 1 0 0.000003)\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-elem-2\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Logo;\n","/**\n * Timeout for the MUI Transition components\n */\nexport const timeout = 400;\n\n/**\n * CSS Transition\n */\nexport const transition = \"all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1)\";\n\n/**\n * The delay for the navbar to render\n */\nexport const navbarDelay = 500;\n\n/**\n * The base delay for a navbar item to render\n */\nexport const navbarItemBaseDelay = 200;\n\n/**\n * The delay for every consecutive nabar item to render\n */\nexport const navbarItemExtraDelay = 300;\n\n/**\n * The daly for the introduction to render\n */\nexport const introductionDelay = 1000;\n\n/**\n * The delay for the typewriter to initially start\n */\nexport const typewriterInitialDelay = introductionDelay + 500;\n\n/**\n * The delay for the typewriter before deleting chars\n */\nexport const typewriterDeleteDelay = 2500;\n","import { Menu, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  anchorElement: null | HTMLElement;\r\n  onClose: () => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const LanguageMenu = ({ open, anchorElement, onClose, handleClose }: IProps) => {\r\n  const { t, i18n } = useTranslation();\r\n  const handleClick = (language: string) => {\r\n    i18n.changeLanguage(language);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Menu open={open} anchorEl={anchorElement} onClose={onClose}>\r\n      <MenuItem onClick={() => handleClick(\"en\")}>{t(\"languageMenu.english\")}</MenuItem>\r\n      <MenuItem onClick={() => handleClick(\"de\")}>{t(\"languageMenu.german\")}</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n","import { Translate } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { LanguageMenu } from \"./LanguageMenu\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst StyledTranslate = styled(Translate)`\r\n  color: white;\r\n`;\r\n\r\nexport const LanguageSwitcher = () => {\r\n  const { t } = useTranslation();\r\n  const [anchorElement, setAnchorElement] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorElement);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title={t(\"languageMenu.tooltip\") as string}>\r\n        <IconButton onClick={handleClick}>\r\n          <StyledTranslate />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <LanguageMenu anchorElement={anchorElement} onClose={handleClose} open={open} handleClose={handleClose} />\r\n    </>\r\n  );\r\n};\r\n","import { INavLink } from \"../components/Navbar/interface\";\n\nexport const navLinks: INavLink[] = [\n  {\n    title: \"navbar.about\",\n    url: \"/#about\",\n  },\n  {\n    title: \"navbar.experience\",\n    url: \"/#experience\",\n  },\n  {\n    title: \"navbar.projects\",\n    url: \"/#projects\",\n  },\n];\n","import { IconButton, lighten, List, ListItem, ListItemButton, Slide, SwipeableDrawer } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { navbarItemBaseDelay, navbarItemExtraDelay, transition } from \"../../utils/constants\";\r\nimport { LanguageSwitcher } from \"../LanguageSwitcher/LanguageSwitcher\";\r\nimport { NavHashLink } from \"react-router-hash-link\";\r\nimport { navLinks } from \"../../data/navLinks\";\r\nimport { INavLink } from \"./interface\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IProps {\r\n  isMounted: boolean;\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  font-family: \"Fira Code\", monospace;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledOl = styled.ol`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n  counter-reset: item 0;\r\n  margin-right: 1vmax;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  counter-increment: item 1;\r\n  margin: 0 10px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledMenuIcon = styled(MenuIcon)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledCloseIcon = styled(CloseIcon)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSwipeableDrawer = styled(SwipeableDrawer)`\r\n  & .MuiPaper-root {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nconst DrawerWrapper = styled.div`\r\n  display: grid;\r\n  flex-direction: column;\r\n  place-content: center;\r\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.3)};\r\n  border-radius: 8px 8px 0 0;\r\n`;\r\n\r\nconst Puller = styled.div`\r\n  display: flex;\r\n  width: 2rem;\r\n  height: 6px;\r\n  background-color: ${(props) => lighten(props.theme.colors.mainblack, 0.05)};\r\n  border-radius: 3px;\r\n  margin-top: 0.75rem;\r\n  justify-self: center;\r\n`;\r\n\r\nconst StyledListItemButton = styled(ListItemButton)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n  transition: ${transition};\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nconst StyledNavHashLink = styled(NavHashLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: ${transition};\r\n  font-size: 1.3rem;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n`;\r\n\r\nexport const MenuNavbar = ({ isMounted }: IProps) => {\r\n  const drawerBleeding = 56;\r\n  const { t } = useTranslation();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = (newOpen: boolean) => () => {\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  const MenuIconButton = open ? (\r\n    <IconButton onClick={toggleDrawer(false)}>\r\n      <StyledCloseIcon />\r\n    </IconButton>\r\n  ) : (\r\n    <IconButton onClick={toggleDrawer(true)}>\r\n      <StyledMenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StyledNav>\r\n        <StyledOl>\r\n          <Slide in={isMounted} timeout={navbarItemBaseDelay}>\r\n            <StyledLi>\r\n              <LanguageSwitcher />\r\n            </StyledLi>\r\n          </Slide>\r\n          <Slide in={isMounted} timeout={navbarItemBaseDelay + navbarItemExtraDelay}>\r\n            <StyledLi>{MenuIconButton}</StyledLi>\r\n          </Slide>\r\n        </StyledOl>\r\n      </StyledNav>\r\n      <StyledSwipeableDrawer\r\n        anchor=\"bottom\"\r\n        open={open}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n        swipeAreaWidth={drawerBleeding}\r\n        disableSwipeToOpen={false}\r\n      >\r\n        <DrawerWrapper>\r\n          <Puller />\r\n          <List>\r\n            {navLinks.map((link: INavLink, idx: number) => {\r\n              return (\r\n                <ListItem>\r\n                  <StyledListItemButton >\r\n                    <StyledNavHashLink smooth to={link.url} onClick={toggleDrawer(false)}>\r\n                      {t(link.title as any)}\r\n                    </StyledNavHashLink>\r\n                  </StyledListItemButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </DrawerWrapper>\r\n      </StyledSwipeableDrawer>\r\n    </>\r\n  );\r\n};\r\n","import { Slide } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { NavHashLink } from \"react-router-hash-link\";\r\nimport styled from \"styled-components\";\r\nimport { navLinks } from \"../../data/navLinks\";\r\nimport { transition, navbarItemBaseDelay, navbarItemExtraDelay } from \"../../utils/constants\";\r\nimport { LanguageSwitcher } from \"../LanguageSwitcher/LanguageSwitcher\";\r\nimport { INavLink } from \"./interface\";\r\n\r\ninterface IProps {\r\n  isMounted: boolean;\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  font-family: \"Fira Code\", monospace;\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nconst StyledOl = styled.ol`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n  counter-reset: item 0;\r\n  margin-right: 1vmax;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  counter-increment: item 1;\r\n  margin: 0 10px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst StyledNavHashLink = styled(NavHashLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: ${transition};\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.mainred};\r\n  }\r\n\r\n  &::before {\r\n    content: \"0\" counter(item) \".\";\r\n    color: ${(props) => props.theme.colors.mainred};\r\n    padding: 7px;\r\n  }\r\n`;\r\n\r\nexport const SideBySideNavbar = ({ isMounted }: IProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <StyledNav>\r\n      <StyledOl>\r\n        {isMounted &&\r\n          navLinks.map((link: INavLink, idx: number) => {\r\n            return (\r\n              <Slide key={idx} in={isMounted} timeout={navbarItemBaseDelay + idx * navbarItemExtraDelay}>\r\n                <StyledLi key={idx}>\r\n                  <StyledNavHashLink smooth to={link.url}>\r\n                    {t(link.title as any)}\r\n                  </StyledNavHashLink>\r\n                </StyledLi>\r\n              </Slide>\r\n            );\r\n          })}\r\n        <Slide in={isMounted} timeout={navbarItemBaseDelay + navLinks.length * navbarItemExtraDelay}>\r\n          <StyledLi>\r\n            <LanguageSwitcher />\r\n          </StyledLi>\r\n        </Slide>\r\n      </StyledOl>\r\n    </StyledNav>\r\n  );\r\n};\r\n","import { useMediaQuery } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\nimport { navbarDelay } from \"../../utils/constants\";\r\nimport { MenuNavbar } from \"./MenuNavbar\";\r\nimport { SideBySideNavbar } from \"./SideBySideNavbar\";\r\n\r\nexport const Navbar = () => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const mediaQuery = useMediaQuery(`(max-width: ${breakpoints.sm})`);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsMounted(true), navbarDelay);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return mediaQuery ? <MenuNavbar isMounted={isMounted} /> : <SideBySideNavbar isMounted={isMounted} />;\r\n};\r\n","import { AppBar, IconButton, Slide, Toolbar, useScrollTrigger, darken, useMediaQuery } from \"@mui/material\";\nimport React from \"react\";\nimport Logo from \"../Logo/Logo\";\nimport styled from \"styled-components\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport { timeout } from \"../../utils/constants\";\nimport { breakpoints } from \"../../styles/globalStyles\";\n\ninterface IProps {\n  homeClickHandler: () => void;\n}\n\nconst StyledAppBar = styled(AppBar)`\n  flex-direction: row;\n  background-color: ${(props) => props.theme.colors.mainblack};\n  padding: 5px 0;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  margin-left: 1vmax;\n  width: 50px;\n  height: 50px;\n\n  &:hover {\n    background-color: ${(props) => darken(props.theme.colors.mainred, 0.7)};\n  }\n`;\n\nconst StyledLogo = styled(Logo)`\n  width: 50px;\n  height: 50px;\n\n  &:hover path {\n    stroke: ${(props) => darken(props.theme.colors.mainred, 0.1)};\n    fill: ${(props) => darken(props.theme.colors.mainred, 0.1)};\n  }\n`;\n\nexport const Header = ({ homeClickHandler }: IProps) => {\n  const trigger = useScrollTrigger({\n    target: window,\n    threshold: 50,\n  });\n  const staticPosition = useMediaQuery(`(max-width: ${breakpoints.md})`)\n\n  return (\n    <>\n      <Slide direction=\"down\" in={!trigger} timeout={timeout}>\n        <StyledAppBar color=\"inherit\" position={staticPosition ? \"absolute\": \"fixed\"}>\n          <Slide direction=\"down\" in={!trigger} timeout={timeout}>\n            <StyledIconButton onClick={homeClickHandler}>\n              <StyledLogo />\n            </StyledIconButton>\n          </Slide>\n          <Navbar />\n        </StyledAppBar>\n      </Slide>\n      <Toolbar />\n    </>\n  );\n};\n","import * as THREE from \"three\";\r\nimport { mergeBufferGeometries } from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\nconst isMesh = (obj: THREE.Object3D): obj is THREE.Mesh => {\r\n  return obj.type === \"Mesh\";\r\n};\r\n\r\nexport const mergeMeshes = (group: THREE.Group, material: THREE.Material) => {\r\n  const geometries: THREE.BufferGeometry[] = [];\r\n  group.children.forEach((obj: THREE.Object3D) => {\r\n    if (isMesh(obj)) {\r\n      const geometry = obj.geometry.clone();\r\n      obj.updateMatrix();\r\n      geometry.applyMatrix4(obj.matrix);\r\n      geometries.push(geometry);\r\n    }\r\n  });\r\n\r\n  return new THREE.Mesh(mergeBufferGeometries(geometries, true), material);\r\n};\r\n","export const headSize = 150;\r\n\r\nexport const headPositionY = 400;\r\n\r\nexport const eyeSizeX = 30;\r\nexport const eyeSizeY = 30;\r\nexport const eyeSizeZ = 1;\r\n\r\nexport const eyePositionY = 10;\r\n\r\nexport const mouthPositionY = -27;\r\n\r\nexport const mainHairSizeX = 10;\r\nexport const mainHairSizeY = 10;\r\nexport const mainHairSizeZ = headSize * 0.75;\r\n\r\nexport const bodySizeX = 200;\r\nexport const bodySizeY = 250;\r\nexport const bodySizeZ = headSize * 0.75;\r\n\r\nexport const bodyPositionY = 200;\r\n\r\nexport const buttonSizeX = 10;\r\nexport const buttonSizeY = buttonSizeX;\r\nexport const buttonSizeZ = 1;\r\n\r\nexport const upperArmSizeX = 40;\r\nexport const upperArmSizeY = 140;\r\nexport const upperArmSizeZ = 50;\r\n\r\nexport const lowerArmSizeX = 40;\r\nexport const lowerArmSizeY = 75;\r\nexport const lowerArmSizeZ = 50;\r\n\r\nexport const thumbSizeX = 20;\r\nexport const thumbSizeY = 40;\r\nexport const thumbSizeZ = 50;\r\n\r\nexport const fingerSizeX = thumbSizeX;\r\nexport const fingerSizeY = 10;\r\nexport const fingerSizeZ = thumbSizeZ;\r\n\r\nexport const beltSizeX = bodySizeX + 10;\r\nexport const beltSizeY = 15;\r\nexport const beltSizeZ = bodySizeZ + 10;\r\nexport const beltPositionY = 75;\r\n\r\nexport const buckleSizeX = 25;\r\nexport const buckleSizeY = beltSizeY;\r\nexport const buckleSizeZ = 1;\r\n\r\nexport const legSizeX = bodySizeX / 2;\r\nexport const legSizeY = 300;\r\nexport const legSizeZ = bodySizeZ;\r\n\r\nexport const legSeperatorSizeX = 5;\r\nexport const legSeperatorSizeY = legSizeY / 2;\r\nexport const legSeperatorSizeZ = legSizeZ + 2;\r\n\r\nexport const legPositionY = -75;\r\n\r\nexport const ankleSizeX = legSizeX * 0.85;\r\nexport const ankleSizeY = 50;\r\nexport const ankleSizeZ = legSizeZ * 0.85;\r\n\r\nexport const footSizeX = ankleSizeX;\r\nexport const footSizeY = 35;\r\nexport const footSizeZ = legSizeZ + 20;\r\n\r\nexport const footPositionZ = -18.5;\r\nexport const anklePositonY = legPositionY - legSizeY / 2 - ankleSizeY / 2;\r\nexport const footPositionY = anklePositonY - ankleSizeY / 2;\r\n","import * as THREE from \"three\";\r\nimport { Vector3 } from \"three\";\r\nimport { mergeMeshes } from \"./characterUtils\";\r\nimport { IArmMeshes } from \"./interface\";\r\nimport {\r\n  anklePositonY,\r\n  ankleSizeX,\r\n  ankleSizeY,\r\n  ankleSizeZ,\r\n  beltPositionY,\r\n  beltSizeX,\r\n  beltSizeY,\r\n  beltSizeZ,\r\n  bodyPositionY,\r\n  bodySizeX,\r\n  bodySizeY,\r\n  bodySizeZ,\r\n  buckleSizeX,\r\n  buckleSizeY,\r\n  buckleSizeZ,\r\n  buttonSizeX,\r\n  buttonSizeY,\r\n  buttonSizeZ,\r\n  eyePositionY,\r\n  eyeSizeX,\r\n  eyeSizeY,\r\n  eyeSizeZ,\r\n  fingerSizeX,\r\n  fingerSizeY,\r\n  fingerSizeZ,\r\n  footPositionY,\r\n  footPositionZ,\r\n  footSizeX,\r\n  footSizeY,\r\n  footSizeZ,\r\n  headPositionY,\r\n  headSize,\r\n  legPositionY,\r\n  legSeperatorSizeX,\r\n  legSeperatorSizeY,\r\n  legSeperatorSizeZ,\r\n  legSizeX,\r\n  legSizeY,\r\n  legSizeZ,\r\n  lowerArmSizeX,\r\n  lowerArmSizeY,\r\n  lowerArmSizeZ,\r\n  mainHairSizeX,\r\n  mainHairSizeY,\r\n  mainHairSizeZ,\r\n  mouthPositionY,\r\n  thumbSizeX,\r\n  thumbSizeY,\r\n  thumbSizeZ,\r\n  upperArmSizeX,\r\n  upperArmSizeY,\r\n  upperArmSizeZ,\r\n} from \"./units\";\r\n\r\n/**\r\n * Class for creating the replication of myself\r\n */\r\nexport class MiniMe {\r\n  public character: THREE.Group;\r\n\r\n  private skinMat: THREE.Material;\r\n  private eyeMat: THREE.Material;\r\n  private retinaMat: THREE.Material;\r\n  private eyeBrownMat: THREE.Material;\r\n  private oralCavityMat: THREE.Material;\r\n  private tongueMat: THREE.Material;\r\n  private teethMat: THREE.Material;\r\n  private glassMat: THREE.Material;\r\n  private earMat: THREE.Material;\r\n  private shirtMat: THREE.Material;\r\n  private beltMat: THREE.Material;\r\n  private buckleMat: THREE.Material;\r\n  private legMat: THREE.Material;\r\n  private legSeperatorMat: THREE.Material;\r\n  private footMat: THREE.Material;\r\n  private hairMat: THREE.Material;\r\n  private buttonMat: THREE.Material;\r\n\r\n  /**\r\n   * defines the materials and calls draw\r\n   */\r\n  constructor() {\r\n    this.character = new THREE.Group();\r\n\r\n    this.skinMat = new THREE.MeshLambertMaterial({ color: \"#e0bea5\" });\r\n    this.eyeMat = new THREE.MeshLambertMaterial({ color: \"#fbfffe\" });\r\n    this.retinaMat = new THREE.MeshLambertMaterial({ color: \"#0aa5ff\" });\r\n    this.eyeBrownMat = new THREE.MeshLambertMaterial({ color: \"#5a3825\" });\r\n    this.oralCavityMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.tongueMat = new THREE.MeshLambertMaterial({ color: \"#cc0e00\" });\r\n    this.teethMat = new THREE.MeshLambertMaterial({ color: \"#fbfffe\" });\r\n    this.glassMat = new THREE.MeshLambertMaterial({\r\n      color: \"#181114\",\r\n      side: THREE.DoubleSide,\r\n    });\r\n    this.earMat = new THREE.MeshLambertMaterial({ color: \"#deb08e\" });\r\n    this.shirtMat = new THREE.MeshLambertMaterial({ color: \"#cc0e00\" });\r\n    this.beltMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.buckleMat = new THREE.MeshLambertMaterial({\r\n      color: \"#808080\",\r\n      side: THREE.DoubleSide,\r\n    });\r\n    this.legMat = new THREE.MeshLambertMaterial({ color: \"#003049\" });\r\n    this.legSeperatorMat = new THREE.MeshLambertMaterial({ color: \"#181114\" });\r\n    this.footMat = new THREE.MeshLambertMaterial({ color: \"#f77f00\" });\r\n    this.hairMat = new THREE.MeshLambertMaterial({ color: \"#ad9032\" });\r\n    this.buttonMat = new THREE.MeshLambertMaterial({ color: \"#808080\", side: THREE.DoubleSide });\r\n\r\n    this.draw();\r\n  }\r\n\r\n  /**\r\n   * Sets the material of the color\r\n   * @param colorIndex the index of the color that is set\r\n   */\r\n  public setShirtMat(colorIndex: number) {\r\n    const colors = [\"#cc0e00\", \"#0aa5ff\"];\r\n    this.shirtMat = new THREE.MeshLambertMaterial({\r\n      color: colors[colorIndex],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Transforms degree to a radian value\r\n   * @param degrees the degrees to transform\r\n   * @returns degrees as radian value\r\n   */\r\n  private deg2rad = (degrees: number) => {\r\n    const halfCircleDegree = 180;\r\n    return degrees * (Math.PI / halfCircleDegree);\r\n  };\r\n\r\n  /**\r\n   * creates the head of the character\r\n   */\r\n  private createHead = () => {\r\n    /**\r\n     * Head\r\n     */\r\n    const headGeometry = new THREE.BoxGeometry(headSize, headSize, headSize * 0.75);\r\n    const head = new THREE.Mesh(headGeometry, this.skinMat);\r\n    head.position.set(0, headPositionY, 0);\r\n\r\n    const [eyes, eyeBrowns]: THREE.Group[] = this.createEyesAndEyebrowns(head);\r\n    const mouth: THREE.Group = this.createMouth(head);\r\n    const [glasses, ears]: THREE.Group[] = this.createGlassesAndEars(head);\r\n\r\n    head.add(eyes, eyeBrowns, mouth, glasses, ears);\r\n    this.character.add(head);\r\n  };\r\n\r\n  /**\r\n   * Creates the eyes and eyebrowns of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @returns {THREE.Group} an array containing the eyes and eyeBrowns\r\n   */\r\n  private createEyesAndEyebrowns = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const eyeGeometry = new THREE.BoxGeometry(eyeSizeX, eyeSizeY, eyeSizeZ);\r\n    const eyes = this.createEyes(head, eyeGeometry);\r\n    const eyeBrowns = this.createEyeBrowns(head, eyeGeometry);\r\n\r\n    return [eyes, eyeBrowns];\r\n  };\r\n\r\n  /**\r\n   * Creates the eyes of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param eyeGeometry the geometry for the eyes\r\n   * @returns {THREE.Group} the eyes of the character\r\n   */\r\n  private createEyes = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    eyeGeometry: THREE.BoxGeometry,\r\n  ): THREE.Group => {\r\n    const eyes = new THREE.Group();\r\n\r\n    const leftEye = new THREE.Mesh(eyeGeometry, this.eyeMat);\r\n    leftEye.position.set(head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 2);\r\n\r\n    const rightEye = new THREE.Mesh(eyeGeometry, this.eyeMat);\r\n    rightEye.position.set(-head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 2);\r\n\r\n    const [leftRetina, rightRetina]: THREE.Mesh<THREE.BoxGeometry, THREE.Material>[] = this.createRetinas();\r\n    leftEye.add(leftRetina);\r\n    rightEye.add(rightRetina);\r\n\r\n    eyes.add(leftEye, rightEye);\r\n\r\n    return eyes;\r\n  };\r\n\r\n  /**\r\n   * Creates the retinas of the character\r\n   * @returns an array containing the meshes representing the left and right retina\r\n   */\r\n  private createRetinas = (): THREE.Mesh<THREE.BoxGeometry, THREE.Material>[] => {\r\n    const retinaGeometry = new THREE.BoxGeometry(7.5, 7.5, 1);\r\n\r\n    const leftRetina = new THREE.Mesh(retinaGeometry, this.retinaMat);\r\n    leftRetina.position.set(-2.5, -5, -1);\r\n\r\n    const rightRetina = new THREE.Mesh(retinaGeometry, this.retinaMat);\r\n    rightRetina.position.set(2.5, -5, -1);\r\n\r\n    return [leftRetina, rightRetina];\r\n  };\r\n\r\n  /**\r\n   * Creates the eyebrowns of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param eyeGeometry the geometry of the eyes\r\n   * @returns {THREE.Group} the eyebrowns of hte character\r\n   */\r\n  private createEyeBrowns = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    eyeGeometry: THREE.BoxGeometry,\r\n  ): THREE.Group => {\r\n    const eyeBrowns = new THREE.Group();\r\n    const eyeBrownGeometry = new THREE.BoxGeometry(40, 10, 1);\r\n    const leftEyeBrown = new THREE.Mesh(eyeBrownGeometry, this.eyeBrownMat);\r\n    leftEyeBrown.position.set(\r\n      head.geometry.parameters.width / 4,\r\n      eyeGeometry.parameters.height + eyeGeometry.parameters.height * 0.5,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    leftEyeBrown.rotateZ(this.deg2rad(2));\r\n\r\n    const rightEyeBrown = new THREE.Mesh(eyeBrownGeometry, this.eyeBrownMat);\r\n    rightEyeBrown.position.set(\r\n      -head.geometry.parameters.width / 4,\r\n      eyeGeometry.parameters.height + eyeGeometry.parameters.height * 0.5,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    rightEyeBrown.rotateZ(this.deg2rad(-2));\r\n\r\n    eyeBrowns.add(leftEyeBrown, rightEyeBrown);\r\n\r\n    return eyeBrowns;\r\n  };\r\n\r\n  /**\r\n   * Creates the mouth of the character\r\n   * @param head  the mesh representing the head of the character\r\n   * @returns the mouth of the character\r\n   */\r\n  private createMouth = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group => {\r\n    const mouth = new THREE.Group();\r\n    const oralCavityGeometry = new THREE.CircleGeometry(25, 5, Math.PI, Math.PI);\r\n    const teethGeometry = new THREE.BoxGeometry(48, 5, 1);\r\n    const tongueGeometry = new THREE.BoxGeometry(15, 5, 1);\r\n\r\n    const oralCavity = new THREE.Mesh(oralCavityGeometry, this.oralCavityMat);\r\n    oralCavity.material.side = THREE.DoubleSide;\r\n    oralCavity.position.set(0, mouthPositionY, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    const teeth = new THREE.Mesh(teethGeometry, this.teethMat);\r\n    teeth.position.set(0, mouthPositionY, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    const tongue = new THREE.Mesh(tongueGeometry, this.tongueMat);\r\n    tongue.position.set(0, -46, -head.geometry.parameters.depth / 2 - 1);\r\n\r\n    mouth.add(oralCavity, teeth, tongue);\r\n\r\n    return mouth;\r\n  };\r\n\r\n  /**\r\n   * Creates the glasses and ears of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @returns an array containing the glasses and ears\r\n   */\r\n  private createGlassesAndEars = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const glassGeometry = new THREE.RingGeometry(27, 32, 4);\r\n    const glasses = this.createGlasses(head, glassGeometry);\r\n    const ears = this.createEars(head, glassGeometry);\r\n\r\n    return [glasses, ears];\r\n  };\r\n\r\n  /**\r\n   * Creates the glasses of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param glassGeometry the geometry of the glasses\r\n   * @returns the glasses of the character\r\n   */\r\n  private createGlasses = (head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>, glassGeometry: THREE.RingGeometry) => {\r\n    const glasses = new THREE.Group();\r\n    const middleConnectorGeometry = new THREE.BoxGeometry(5, 30, 1);\r\n    const outerConnectorGeometry = new THREE.BoxGeometry(5, 17, 1);\r\n    const sideConnectorGeometry = new THREE.BoxGeometry(5, head.geometry.parameters.depth / 2, 1);\r\n\r\n    const leftGlass = new THREE.Mesh(glassGeometry, this.glassMat);\r\n    leftGlass.position.set(head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 1);\r\n    leftGlass.rotateZ(this.deg2rad(45));\r\n\r\n    const rightGlass = new THREE.Mesh(glassGeometry, this.glassMat);\r\n    rightGlass.position.set(-head.geometry.parameters.width / 4, eyePositionY, -head.geometry.parameters.depth / 2 - 1);\r\n    rightGlass.rotateZ(this.deg2rad(45));\r\n\r\n    const middleConnector = new THREE.Mesh(middleConnectorGeometry, this.glassMat);\r\n    middleConnector.position.set(0, glassGeometry.parameters.outerRadius / 2, -head.geometry.parameters.depth / 2 - 1);\r\n    middleConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const leftOuterConnector = new THREE.Mesh(outerConnectorGeometry, this.glassMat);\r\n    leftOuterConnector.position.set(\r\n      leftGlass.position.x + leftGlass.geometry.parameters.innerRadius + 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    leftOuterConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const rightOuterConnector = new THREE.Mesh(outerConnectorGeometry, this.glassMat);\r\n    rightOuterConnector.position.set(\r\n      rightGlass.position.x - rightGlass.geometry.parameters.innerRadius - 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 2 - 1,\r\n    );\r\n    rightOuterConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const leftSideConnector = new THREE.Mesh(sideConnectorGeometry, this.glassMat);\r\n    leftSideConnector.position.set(\r\n      head.geometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 4,\r\n    );\r\n    leftSideConnector.rotateY(this.deg2rad(90));\r\n    leftSideConnector.rotateZ(this.deg2rad(90));\r\n\r\n    const rightSideConnector = new THREE.Mesh(sideConnectorGeometry, this.glassMat);\r\n    rightSideConnector.position.set(\r\n      -head.geometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -head.geometry.parameters.depth / 4,\r\n    );\r\n    rightSideConnector.rotateY(this.deg2rad(90));\r\n    rightSideConnector.rotateZ(this.deg2rad(90));\r\n\r\n    glasses.add(\r\n      leftGlass,\r\n      rightGlass,\r\n      middleConnector,\r\n      leftOuterConnector,\r\n      rightOuterConnector,\r\n      leftSideConnector,\r\n      rightSideConnector,\r\n    );\r\n\r\n    return glasses;\r\n  };\r\n\r\n  /**\r\n   * Creates the ears of the character\r\n   * @param head the mesh representing the head of the character\r\n   * @param glassGeometry the geometry of classes\r\n   * @returns the ears of the character\r\n   */\r\n  private createEars = (\r\n    head: THREE.Mesh<THREE.BoxGeometry, THREE.Material>,\r\n    glassGeometry: THREE.RingGeometry,\r\n  ): THREE.Group => {\r\n    const ears = new THREE.Group();\r\n    const earGeometry = new THREE.BoxGeometry(10, 30, 25);\r\n\r\n    const leftEar = new THREE.Mesh(earGeometry, this.earMat);\r\n    leftEar.position.set(\r\n      head.geometry.parameters.width / 2 + earGeometry.parameters.width / 2,\r\n      glassGeometry.parameters.outerRadius / 2,\r\n      -4,\r\n    );\r\n\r\n    const rightEar = new THREE.Mesh(earGeometry, this.earMat);\r\n    rightEar.position.set(-head.geometry.parameters.width / 2, glassGeometry.parameters.outerRadius / 2, -4);\r\n\r\n    ears.add(leftEar, rightEar);\r\n\r\n    return ears;\r\n  };\r\n\r\n  /**\r\n   * Creates the hairs of the character\r\n   */\r\n  private createHairs = () => {\r\n    const hair: THREE.Group = new THREE.Group();\r\n    let mainHair: THREE.Mesh;\r\n    let detailHair: THREE.Mesh;\r\n    const basicHairs: THREE.Group = new THREE.Group();\r\n    let detailHairs: THREE.Group;\r\n    let baiscHairGeometry: THREE.BoxGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ);\r\n\r\n    const maxTopHair = headSize / mainHairSizeX;\r\n    this.createTopHair(basicHairs, baiscHairGeometry, maxTopHair);\r\n\r\n    const maxBackHair = headSize / mainHairSizeX + 2;\r\n    this.createBackHair(basicHairs, maxBackHair);\r\n\r\n    const maxSideHair = (headSize * 0.75) / mainHairSizeX;\r\n    this.createSideHair(basicHairs, baiscHairGeometry, maxSideHair);\r\n    this.createSideHair(basicHairs, baiscHairGeometry, maxSideHair, false);\r\n\r\n    detailHairs = this.createDetailHairs();\r\n\r\n    mainHair = mergeMeshes(basicHairs, this.hairMat);\r\n    detailHair = mergeMeshes(detailHairs, this.hairMat);\r\n\r\n    hair.add(mainHair, detailHairs);\r\n    this.character.add(hair);\r\n  };\r\n\r\n  /**\r\n   * Creates the basic top hair of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param baiscHairGeometry the geometry of the basic hair\r\n   * @param maxTopHair how many blocks are needed for the top hairs\r\n   */\r\n  private createTopHair = (basicHairs: THREE.Group, baiscHairGeometry: THREE.BoxGeometry, maxTopHair: number) => {\r\n    const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2;\r\n    for (let i = 0; i < maxTopHair; i++) {\r\n      const hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 - mainHairSizeX / 2 - i * mainHairSizeX;\r\n      hair.position.set(hairPositionX, hairPositionY, 0);\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the basic back hair of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param maxBackHair how many blocks are needed for the back hairs\r\n   */\r\n  private createBackHair = (basicHairs: THREE.Group, maxBackHair: number) => {\r\n    for (let i = 0; i < maxBackHair; i++) {\r\n      const backHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.6);\r\n      const hair = new THREE.Mesh(backHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 + mainHairSizeX / 2 - i * mainHairSizeX;\r\n      const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY - backHairGeometry.parameters.depth / 2;\r\n      const hairPositionZ = mainHairSizeZ / 2;\r\n      hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      hair.rotateX(this.deg2rad(90));\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the basic side hairs of the character\r\n   * @param basicHairs the group containing the basic hairs of the character\r\n   * @param baiscHairGeometry  the geometry of basic hairs\r\n   * @param maxSideHair how many blocks are needed for the side hairs\r\n   * @param {boolean} isLeftSide whether it should be rendered on the left or right side\r\n   */\r\n  private createSideHair = (\r\n    basicHairs: THREE.Group,\r\n    baiscHairGeometry: THREE.BoxGeometry,\r\n    maxSideHair: number,\r\n    isLeftSide: boolean = true,\r\n  ) => {\r\n    for (let i = 0; i < maxSideHair; i++) {\r\n      let hair: THREE.Mesh;\r\n      const sideMultiplier = isLeftSide ? 1 : -1;\r\n      const hairPositionX = sideMultiplier * (headSize / 2 + mainHairSizeX / 2);\r\n      const hairPositionZ = (-headSize * 0.75) / 2 + i * mainHairSizeX;\r\n\r\n      if (i === 12) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 25);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 23.1;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i === 0) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 10);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 15.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i === 1) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 7.5);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 14.35;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i >= 10) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2 + 10);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 15.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else if (i < 4 || i >= 8) {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ / 2);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 10.6;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      } else {\r\n        baiscHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.4 + 3);\r\n        hair = new THREE.Mesh(baiscHairGeometry, this.hairMat);\r\n        const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 4 - mainHairSizeY - 6.5;\r\n        hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n      }\r\n\r\n      hair.rotateY(this.deg2rad(90));\r\n      hair.rotateX(this.deg2rad(90));\r\n      basicHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates the detail hairs of the character\r\n   * @returns the detail hairs of the character\r\n   */\r\n  private createDetailHairs = (): THREE.Group => {\r\n    const detailHairs: THREE.Group = new THREE.Group();\r\n    let hairGeometry = new THREE.BoxGeometry(headSize * 0.8, mainHairSizeY, 10);\r\n    const hairPositionZ = (-headSize * 0.75) / 2 - hairGeometry.parameters.depth / 2;\r\n\r\n    this.createFrontHairParting(detailHairs, hairPositionZ, hairGeometry);\r\n\r\n    this.createFrontHairRightSideDetails(detailHairs, hairPositionZ);\r\n\r\n    this.createBackHairDetails(detailHairs);\r\n\r\n    return detailHairs;\r\n  };\r\n\r\n  /**\r\n   * Creates the hair parting on the front left side\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   * @param hairPositionZ the position of the hair on the z-axis\r\n   * @param hairGeometry the geometry of the hair\r\n   */\r\n  private createFrontHairParting = (\r\n    detailHairs: THREE.Group,\r\n    hairPositionZ: number,\r\n    hairGeometry: THREE.BoxGeometry,\r\n  ) => {\r\n    // hair lowest stripe\r\n    let hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    let hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    let hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 - hairGeometry.parameters.height;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n\r\n    // hair parting second lowest stripe\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.75, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n\r\n    // hair parting third lowest stripe\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.63, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = headSize / 2 - hairGeometry.parameters.width / 2 + mainHairSizeX;\r\n    hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 + hairGeometry.parameters.height;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    detailHairs.add(hair);\r\n  };\r\n\r\n  /**\r\n   * Creates the details on the right side\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   * @param hairPositionZ the position of the hair on the z-axis\r\n   */\r\n  private createFrontHairRightSideDetails = (detailHairs: THREE.Group, hairPositionZ: number) => {\r\n    let hairGeometry = new THREE.BoxGeometry(headSize / 4, mainHairSizeY, 10);\r\n    let hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    let hairPositionX = -headSize / 2 - mainHairSizeX / 2;\r\n    let hairPositionY = headPositionY + headSize / 2 - mainHairSizeY + 1.2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.225, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 6.5;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 2 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 3 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize / 5, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 4 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2 - 3;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n\r\n    hairGeometry = new THREE.BoxGeometry(headSize * 0.16, mainHairSizeY, 10);\r\n    hair = new THREE.Mesh(hairGeometry, this.hairMat);\r\n    hairPositionX = -headSize / 2 - mainHairSizeX / 2 + 5 * hairGeometry.parameters.depth;\r\n    hairPositionY = headPositionY + headSize / 2;\r\n    hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n    hair.rotateZ(this.deg2rad(90));\r\n    detailHairs.add(hair);\r\n  };\r\n\r\n  // private createTopHairDetails = (detailHairs: THREE.Group) => {\r\n  //   const maxTopHairDetails = (headSize * 0.63) / topHairDetailsSizeX - 1;\r\n  //   const geometry = new THREE.BoxGeometry(topHairDetailsSizeX, topHairDetailsSizeY, topHairDetailsSizeZ);\r\n  //   const hairPositionY = headPositionY + headSize / 2 + mainHairSizeY / 2 + topHairDetailsSizeY;\r\n  //   const hairPositionZ = (-headSize * 0.75) / 2 + topHairDetailsSizeZ / 2;\r\n\r\n  //   for (let i = 0; i < maxTopHairDetails; i++) {\r\n  //     const hairPositionX = headSize / 2 - mainHairSizeX / 2 + topHairDetailsSizeX - i * topHairDetailsSizeX;\r\n  //     const hair = new THREE.Mesh(geometry, this.hairMat);\r\n  //     hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n  //     detailHairs.add(hair);\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * Creates the detail hairs on the back\r\n   * @param detailHairs the group containing the detail hairs of the character\r\n   */\r\n  private createBackHairDetails = (detailHairs: THREE.Group) => {\r\n    const maxBackDetailsHair = headSize / mainHairSizeX + 2;\r\n    const backHairGeometry = new THREE.BoxGeometry(mainHairSizeX, mainHairSizeY, mainHairSizeZ * 0.6);\r\n    const half = Math.floor((maxBackDetailsHair - 1) / 2);\r\n    const base = 12;\r\n    const step = 7;\r\n\r\n    for (let i = 0; i < maxBackDetailsHair; i++) {\r\n      const sameStartSameEndIdx = i > half ? half - (i - half) : i;\r\n      let factor = this.getFactorForBackHairDetails(sameStartSameEndIdx);\r\n\r\n      const hair = new THREE.Mesh(backHairGeometry, this.hairMat);\r\n      const hairPositionX = headSize / 2 + mainHairSizeX / 2 - i * mainHairSizeX;\r\n      const hairPositionZ = mainHairSizeZ / 2;\r\n      const hairPositionY =\r\n        headPositionY + headSize / 2 + mainHairSizeY - backHairGeometry.parameters.depth / 2 - (base + factor * step);\r\n\r\n      hair.rotateX(this.deg2rad(90));\r\n      hair.position.set(hairPositionX, hairPositionY, hairPositionZ);\r\n\r\n      detailHairs.add(hair);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the factor for positioning the back side hair blocks\r\n   * @param idx the index of the loop\r\n   * @returns {number} the factor for the positioning\r\n   */\r\n  private getFactorForBackHairDetails = (idx: number): number => {\r\n    if (idx <= 1) return 0;\r\n\r\n    if (idx <= 3) return 1;\r\n\r\n    if (idx <= 5) return 2;\r\n\r\n    return 3;\r\n  };\r\n\r\n  /**\r\n   * Creates the body of the character\r\n   */\r\n  private createBody = () => {\r\n    const corpusGeometry = new THREE.BoxGeometry(bodySizeX, bodySizeY, bodySizeZ);\r\n    const body = new THREE.Group();\r\n\r\n    const corpus = new THREE.Mesh(corpusGeometry, this.shirtMat);\r\n    corpus.position.set(0, bodyPositionY, 0);\r\n\r\n    const [leftArm, rightArm]: THREE.Group[] = this.createArms(corpus);\r\n\r\n    const buttons: THREE.Group = this.createButtons();\r\n\r\n    corpus.add(leftArm, rightArm, buttons);\r\n\r\n    body.add(corpus);\r\n    this.character.add(body);\r\n  };\r\n\r\n  /**\r\n   * Creates the buttons on the shirt\r\n   * @returns the buttons created\r\n   */\r\n  private createButtons = (): THREE.Group => {\r\n    const buttons: THREE.Group = new THREE.Group();\r\n\r\n    const totalButtons = 4;\r\n\r\n    for (let i = 0; i < totalButtons; i++) {\r\n      const button = this.createButton(i);\r\n      buttons.add(button);\r\n    }\r\n\r\n    return buttons;\r\n  };\r\n\r\n  /**\r\n   * Creates a single button of the shirt\r\n   * @param factor the factor for positiong\r\n   * @returns a single button of the shirt\r\n   */\r\n  private createButton = (factor: number): THREE.Mesh => {\r\n    const buttonPositionYOffset = -35;\r\n    const buttonPositionYStep = 50;\r\n    const buttonGeometry = new THREE.BoxGeometry(buttonSizeX, buttonSizeY, buttonSizeZ);\r\n    const button = new THREE.Mesh(buttonGeometry, this.buttonMat);\r\n    const buttonPositionZ = -bodySizeZ / 2 - 1;\r\n    const buttonPositionX = 0;\r\n    const buttonPositionY = buttonPositionYOffset + bodySizeY / 2 - factor * buttonPositionYStep;\r\n    button.position.set(buttonPositionX, buttonPositionY, buttonPositionZ);\r\n\r\n    return button;\r\n  };\r\n\r\n  /**\r\n   * Creates the arms of the character\r\n   * @param corpus the mesh representing the corpus of the character\r\n   * @returns an array containing the left and right arm\r\n   */\r\n  private createArms = (corpus: THREE.Mesh<THREE.BoxGeometry, THREE.Material>): THREE.Group[] => {\r\n    const upperArmGeometry = new THREE.BoxGeometry(upperArmSizeX, upperArmSizeY, upperArmSizeZ);\r\n    const lowerArmGeometry = new THREE.BoxGeometry(lowerArmSizeX, lowerArmSizeY, lowerArmSizeZ);\r\n    const thumbGeometry = new THREE.BoxGeometry(thumbSizeX, thumbSizeY, thumbSizeZ);\r\n    const fingerGeometry = new THREE.BoxGeometry(fingerSizeX, fingerSizeY, fingerSizeZ);\r\n\r\n    const leftArm = this.createArm(corpus.geometry, upperArmGeometry, lowerArmGeometry, thumbGeometry, fingerGeometry);\r\n    const rightArm = this.createArm(\r\n      corpus.geometry,\r\n      upperArmGeometry,\r\n      lowerArmGeometry,\r\n      thumbGeometry,\r\n      fingerGeometry,\r\n      false,\r\n    );\r\n\r\n    return [leftArm, rightArm];\r\n  };\r\n\r\n  /**\r\n   * Creates one arm\r\n   * @param corpus the mesh representing the corpus of the character\r\n   * @param upperArmGeometry the geometry of the upper arm\r\n   * @param lowerArmGeometry the geometry of the lower arm\r\n   * @param thumbGeometry the geometry of the thumb\r\n   * @param fingerGeometry the geometry of the finger\r\n   * @param {boolean} isLeftArm whether its the left or right arm\r\n   * @returns the created arm\r\n   */\r\n  private createArm = (\r\n    corpus: THREE.BoxGeometry,\r\n    upperArmGeometry: THREE.BoxGeometry,\r\n    lowerArmGeometry: THREE.BoxGeometry,\r\n    thumbGeometry: THREE.BoxGeometry,\r\n    fingerGeometry: THREE.BoxGeometry,\r\n    isLeftArm: boolean = true,\r\n  ) => {\r\n    const arm = new THREE.Group();\r\n    const hand = new THREE.Group();\r\n    const sideModificator = isLeftArm ? 1 : -1;\r\n\r\n    const { upperArm, lowerArm, thumb, fingers } = this.createArmMeshes(\r\n      upperArmGeometry,\r\n      lowerArmGeometry,\r\n      thumbGeometry,\r\n      fingerGeometry,\r\n    );\r\n    hand.add(thumb, fingers);\r\n\r\n    upperArm.position.set(\r\n      sideModificator * (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2),\r\n      corpus.parameters.height / 2 - upperArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    lowerArm.position.set(\r\n      sideModificator * (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2),\r\n      upperArm.position.y - upperArmGeometry.parameters.height / 2 - lowerArm.geometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    thumb.position.set(\r\n      sideModificator *\r\n        (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2 + thumbGeometry.parameters.width / 2),\r\n      lowerArm.position.y - lowerArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n    fingers.position.set(\r\n      sideModificator *\r\n        (corpus.parameters.width / 2 + upperArmGeometry.parameters.width / 2 - fingerGeometry.parameters.width / 2),\r\n      lowerArm.position.y - lowerArmGeometry.parameters.height / 2,\r\n      0,\r\n    );\r\n\r\n    arm.add(upperArm, lowerArm, hand);\r\n\r\n    return arm;\r\n  };\r\n\r\n  /**\r\n   * Creates the arm meshes\r\n   * @param upperArmGeometry the geometry of the upper arm\r\n   * @param lowerArmGeometry the geomtry of the lower arm\r\n   * @param thumbGeometry the geometry of the thumb\r\n   * @param fingerGeometry the geometry of the finger\r\n   * @returns an object containing the meshes\r\n   */\r\n  private createArmMeshes = (\r\n    upperArmGeometry: THREE.BoxGeometry,\r\n    lowerArmGeometry: THREE.BoxGeometry,\r\n    thumbGeometry: THREE.BoxGeometry,\r\n    fingerGeometry: THREE.BoxGeometry,\r\n  ): IArmMeshes => {\r\n    const upperArm = new THREE.Mesh(upperArmGeometry, this.shirtMat);\r\n    const lowerArm = new THREE.Mesh(lowerArmGeometry, this.skinMat);\r\n    const thumb = new THREE.Mesh(thumbGeometry, this.skinMat);\r\n    const fingers = new THREE.Mesh(fingerGeometry, this.skinMat);\r\n\r\n    return { upperArm, lowerArm, thumb, fingers };\r\n  };\r\n\r\n  /**\r\n   * Creates the belt of the character\r\n   */\r\n  private createBelt = () => {\r\n    const beltGeometry = new THREE.BoxGeometry(beltSizeX, beltSizeY, beltSizeZ);\r\n    const buckleGeometry = new THREE.BoxGeometry(buckleSizeX, buckleSizeY, buckleSizeZ);\r\n\r\n    const belt = new THREE.Mesh(beltGeometry, this.beltMat);\r\n    belt.position.set(0, beltPositionY, 0);\r\n\r\n    const buckle = new THREE.Mesh(buckleGeometry, this.buckleMat);\r\n    buckle.position.z = -1 * (beltGeometry.parameters.depth / 2 + 1);\r\n\r\n    belt.add(buckle);\r\n    this.character.add(belt);\r\n  };\r\n\r\n  /**\r\n   * Creates the leg of the character\r\n   */\r\n  private createLegs = () => {\r\n    const legs = new THREE.Group();\r\n    const legGeometry = new THREE.BoxGeometry(legSizeX, legSizeY, legSizeZ);\r\n    const legSeperatorGeometry = new THREE.BoxGeometry(legSeperatorSizeX, legSeperatorSizeY, legSeperatorSizeZ);\r\n\r\n    const leftLeg = new THREE.Mesh(legGeometry, this.legMat);\r\n    leftLeg.position.set(legGeometry.parameters.width / 2, legPositionY, 0);\r\n\r\n    const rightLeg = new THREE.Mesh(legGeometry, this.legMat);\r\n    rightLeg.position.set(-legGeometry.parameters.width / 2, legPositionY, 0);\r\n\r\n    const legSeperator = new THREE.Mesh(legSeperatorGeometry, this.legSeperatorMat);\r\n    legSeperator.position.set(0, legPositionY - legSeperatorGeometry.parameters.height / 2, 0);\r\n\r\n    legs.add(leftLeg, rightLeg, legSeperator);\r\n    this.character.add(legs);\r\n  };\r\n\r\n  /**\r\n   * creates the feet of the character\r\n   */\r\n  private createFeet = () => {\r\n    const feet = new THREE.Group();\r\n    const ankleGeometry = new THREE.BoxGeometry(ankleSizeX, ankleSizeY, ankleSizeZ);\r\n    const footGeometry = new THREE.BoxGeometry(footSizeX, footSizeY, footSizeZ);\r\n\r\n    const leftAnkle = new THREE.Mesh(ankleGeometry, this.footMat);\r\n    leftAnkle.position.set(legSizeX / 2, anklePositonY, 0);\r\n    const rightAnkle = new THREE.Mesh(ankleGeometry, this.footMat);\r\n    rightAnkle.position.set(-legSizeX / 2, anklePositonY, 0);\r\n\r\n    const leftFoot = new THREE.Mesh(footGeometry, this.footMat);\r\n    leftFoot.position.set(legSizeX / 2, footPositionY, footPositionZ);\r\n    const rightFoot = new THREE.Mesh(footGeometry, this.footMat);\r\n    rightFoot.position.set(-legSizeX / 2, footPositionY, footPositionZ);\r\n\r\n    feet.add(leftAnkle, rightAnkle, leftFoot, rightFoot);\r\n    this.character.add(feet);\r\n  };\r\n\r\n  private transform = () => {\r\n    this.character.translateY(-50);\r\n    this.character.scale.set(1.05, 1.05, 1.05);\r\n  };\r\n\r\n  /**\r\n   * draws the character\r\n   */\r\n  public draw = () => {\r\n    this.createHead();\r\n    this.createHairs();\r\n    this.createBody();\r\n    this.createBelt();\r\n    this.createLegs();\r\n    this.createFeet();\r\n    this.transform();\r\n  };\r\n\r\n  public animate = () => {\r\n    //console.log(this.character);\r\n    console.log(\"character\");\r\n    //stopAnimation();\r\n  };\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\nimport { MiniMe } from \"./miniMe\";\r\nimport styled from \"styled-components\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\n\r\nconst StyledDiv = styled.div`\r\n  cursor: crosshair;\r\n`;\r\n\r\nexport const Character = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const character = new MiniMe();\r\n  const shouldAnimate = useRef(true);\r\n  const mediaQuery = useMediaQuery(`(min-width: ${breakpoints.md})`);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n\r\n    const camera = new THREE.PerspectiveCamera(65, window.innerWidth / window.innerHeight, 0.1, 4000);\r\n\r\n    camera.position.set(0, 400, -1000);\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n    const axesHelper = new THREE.AxesHelper(2000);\r\n    scene.add(axesHelper);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.update();\r\n\r\n    ref?.current?.replaceChildren(renderer.domElement);\r\n\r\n    const init = () => {\r\n      window.addEventListener(\"load\", () => {});\r\n    };\r\n\r\n    const createLight = () => {\r\n      const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.7);\r\n      const ambientLight = new THREE.AmbientLight(0x404040, 1.2);\r\n\r\n      scene.add(hemiLight);\r\n      scene.add(ambientLight);\r\n    };\r\n\r\n    const createCharacter = () => {\r\n      scene.add(character.character);\r\n    };\r\n\r\n    function resizeCanvasToDisplaySize() {\r\n      const canvas = renderer.domElement;\r\n      const width = canvas.clientWidth;\r\n      const height = canvas.clientHeight;\r\n      if (canvas.width !== width || canvas.height !== height) {\r\n        // you must pass false here or three.js sadly fights the browser\r\n        renderer.setSize(width, height, true);\r\n        camera.aspect = width / height;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n    }\r\n    const animate = function () {\r\n      requestAnimationFrame(animate);\r\n\r\n      if (shouldAnimate.current) {\r\n        character.animate();\r\n        shouldAnimate.current = false;\r\n      }\r\n\r\n      resizeCanvasToDisplaySize();\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    init();\r\n    createLight();\r\n    createCharacter();\r\n    animate();\r\n  }, [mediaQuery]);\r\n\r\n  return mediaQuery ? <StyledDiv ref={ref} id=\"character\"></StyledDiv> : null;\r\n};\r\n","import { Email } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  text-transform: none;\r\n  margin: 3vh auto;\r\n`;\r\n\r\nconst StyledEmailIcon = styled(Email)`\r\n  color: ${(props) => props.theme.colors.mainwhite};\r\n`;\r\n\r\nexport const CTAButton = ({ children, className, onClick }: IProps) => {\r\n  return (\r\n    <StyledButton onClick={onClick} className={className} variant=\"contained\" startIcon={<StyledEmailIcon />}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { transition } from \"../../utils/constants\";\n\ninterface IProps {\n  url: string;\n}\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.mainred};\n  transition: ${transition};\n  position: relative;\n  display: inline-block;\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 1.5px;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.mainred};\n    opacity: 0.5;\n    transition: ${transition};\n    bottom: 0.2rem;\n  }\n`;\n\nexport const StyledLink: FunctionComponent<IProps> = ({ url, children }) => {\n  return (\n    <Link href={url} target={\"_blank\"}>\n      {children}\n    </Link>\n  );\n};\n","import { Grow, lighten, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { breakpoints } from \"../../styles/globalStyles\";\r\nimport { introductionDelay, typewriterDeleteDelay, typewriterInitialDelay } from \"../../utils/constants\";\r\nimport { Character } from \"../Character/Character\";\r\nimport { CTAButton } from \"../util-components/CTAButton\";\r\nimport { StyledLink } from \"../util-components/StyledLink\";\r\nimport \"./Introduction.css\";\r\n\r\ntype TypographyProps = {\r\n  component: React.ElementType;\r\n};\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  /** 50px navbar and 2*5vh margin */\r\n  min-height: calc(100vh - 50px - 10vh);\r\n  margin: 5vh auto;\r\n\r\n  @media (max-width: ${breakpoints.md}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  margin: 7vh 0 0 7.5vw;\r\n\r\n  @media screen and (max-width: ${breakpoints.md}) {\r\n    margin: 7vh 0.5rem 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledBeforeTypwriter = styled(Typography)<TypographyProps>`\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.4)};\r\n  font-size: 1rem;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nconst StyledSubtitle = styled(Typography)`\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.8)};\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst StyledText = styled(Typography)`\r\n  font-size: 1.1rem;\r\n  margin-top: 10vh;\r\n  color: ${(props) => lighten(props.theme.colors.mainblack, 0.8)};\r\n  width: 75%;\r\n\r\n  @media screen and (max-width: ${breakpoints.md}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledCTAButton = styled(CTAButton)`\r\n  margin: 6vh 0 3vh 0;\r\n  padding: 1vh 2vw;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Introduction = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    navigate(\"contact\", { replace: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsMounted(true), introductionDelay);\r\n    //const timeout = setTimeout(() => setIsMounted(true), 0);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <Grow in={isMounted} timeout={400}>\r\n      <Grid>\r\n        <TextWrapper>\r\n          <StyledBeforeTypwriter variant=\"h6\" component={\"p\"}>\r\n            {t(\"introduction.hi\")}{\" \"}\r\n          </StyledBeforeTypwriter>\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter\r\n                .pauseFor(typewriterInitialDelay)\r\n                .typeString(t(\"introduction.name\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.student\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.jobdescription\"))\r\n                .pauseFor(typewriterDeleteDelay)\r\n                .deleteAll()\r\n                .typeString(t(\"introduction.name\"))\r\n                .start();\r\n            }}\r\n          />\r\n          <StyledSubtitle>{t(\"introduction.subtitle\")}</StyledSubtitle>\r\n          <StyledText>\r\n            {t(\"introduction.info.firstText\")}{\" \"}\r\n            <StyledLink url=\"https://www.htwk-leipzig.de/startseite/\">{t(\"introduction.info.htwkLink\")}</StyledLink>{\" \"}\r\n            {t(\"introduction.info.secondText\")}{\" \"}\r\n            <StyledLink url=\"https://www.ipoque.com/\">{t(\"introduction.info.jobLink\")}</StyledLink>.\r\n          </StyledText>\r\n          <StyledCTAButton onClick={handleClick}>Contact me!</StyledCTAButton>\r\n        </TextWrapper>\r\n        <Character />\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport About from \"../About/About\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport Experience from \"../Experience/Experience\";\r\nimport Projects from \"../Projects/Projects\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport Chatbot from \"../Chatbot/Chatbot\";\r\nimport { Header } from \"./Header\";\r\nimport AnimatedLogo from \"../Logo/AnimatedLogo\";\r\nimport styled from \"styled-components\";\r\nimport { Introduction } from \"../Introduction/Introduction\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\n\r\nconst StyledLogoWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: ${(props) => props.theme.colors.mainblack};\r\n`;\r\n\r\nconst StyledAnimatedLogo = styled(AnimatedLogo)`\r\n  width: 30vw;\r\n  height: 30vh;\r\n`;\r\n\r\nconst StyledContentWrapper = styled.div`\r\n  background-color: ${(props) => props.theme.colors.mainblack};\r\n  color: ${(props) => props.theme.colors.whitefontcolor};\r\n`;\r\n\r\nfunction App() {\r\n  const [isInAnimation, setIsInAnimation] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const handleHomeClick = () => {\r\n    setIsInAnimation(true);\r\n    navigate(\"/\", {replace: true});\r\n  };\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      setIsInAnimation(false);\r\n    }, 2800);\r\n    return () => clearTimeout(id);\r\n  }, [isInAnimation]);\r\n\r\n  return isInAnimation ? (\r\n    <StyledLogoWrapper>\r\n      <StyledAnimatedLogo />\r\n    </StyledLogoWrapper>\r\n  ) : (\r\n    <StyledContentWrapper>\r\n      <Header homeClickHandler={handleHomeClick} />\r\n      <Routes>\r\n        {/* TODO: refactor items into one component */}\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <>\r\n              <Introduction />\r\n              <About />\r\n              <Experience />\r\n              <Projects />\r\n              <Chatbot />\r\n            </>\r\n          }\r\n        />\r\n        <Route path=\"/contact\" element={<Contact />} />\r\n        <Route path=\"*\" element={<>\r\n              <Introduction />\r\n              <About />\r\n              <Experience />\r\n              <Projects />\r\n              <Chatbot />\r\n            </>} />\r\n      </Routes>\r\n    </StyledContentWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport \"./AnimatedLogo.css\";\n\ninterface IProps {\n  className?: string;\n}\n\nexport default function AnimatedLogo({ className }: IProps) {\n  return (\n    <svg\n      id=\"e76RbDrnTZM1\"\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 226.304018 200.378\"\n      shapeRendering=\"geometricPrecision\"\n      textRendering=\"geometricPrecision\"\n    >\n      <path\n        id=\"e76RbDrnTZM2\"\n        d=\"M75.000003,20.999997L75.000003,43.003079L152.325119,43.003079L152.325119,20.999997L75.000003,20.999997Z\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-animated-elem-1\"\n      ></path>\n      <path\n        id=\"e76RbDrnTZM3\"\n        d=\"M75.000003,72.550075L75.000003,156.999998L97.841297,156.999997L97.841297,94.972261L152.325119,94.97226L152.325119,72.550072L75.000003,72.550075Z\"\n        transform=\"matrix(1 0 0 1 0 0.000003)\"\n        fill=\"#cc0e00\"\n        stroke=\"#cc0e00\"\n        strokeWidth=\"0.452608\"\n        className=\"svg-animated-elem-2\"\n      ></path>\n    </svg>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@mui/material/styles\";\n\nexport const muiTheme = createTheme({\n  typography: {\n    fontFamily: [\n      \"Fira Code\",\n      \"Roboto\",\n      '\"Oxygen\"',\n      '\"Ubuntu\"',\n      '\"Cantarell\"',\n      '\"Fira Sans\"',\n      '\"Droid Sans\"',\n      '\"Helvetica Neue\"',\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    primary: {\n      main: \"#cc0e00\",\n    },\n  },\n});\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translation_en from \"./locales/en/translation.json\";\r\nimport translation_de from \"./locales/de/translation.json\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them,\r\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\r\nconst resources = {\r\n  en: {\r\n    translation: translation_en,\r\n  },\r\n  de: {\r\n    translation: translation_de,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { StyledEngineProvider, ThemeProvider as MUIThemeProvider } from \"@mui/material/styles\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./styles/styledComponentsTheme\";\r\nimport { muiTheme } from \"./styles/muiTheme\";\r\nimport { GlobalStyle } from \"./styles/globalStyles\";\r\n\r\nimport \"./i18n/i18n\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <StyledEngineProvider injectFirst>\r\n        <MUIThemeProvider theme={muiTheme}>\r\n          <ThemeProvider theme={theme}>\r\n            <GlobalStyle />\r\n              <App />\r\n          </ThemeProvider>\r\n        </MUIThemeProvider>\r\n      </StyledEngineProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","interface ITheme {\n  colors: IColor;\n}\n\ninterface IColor {\n  mainblack: string;\n  mainwhite: string;\n  mainred: string;\n  whitefontcolor: string;\n}\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme extends ITheme {}\n}\n\nexport const theme: ITheme = {\n  colors: {\n    mainblack: \"#181114\",\n    mainwhite: \"#fbfffe\",\n    mainred: \"#cc0e00\",\n    whitefontcolor: \"#fbfffe\",\n  },\n};\n"],"sourceRoot":""}